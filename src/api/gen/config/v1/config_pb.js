/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var config_v1_resources_pb = require('../../config/v1/resources_pb.js');
goog.object.extend(proto, config_v1_resources_pb);
var commons_v1_resources_pb = require('../../commons/v1/resources_pb.js');
goog.object.extend(proto, commons_v1_resources_pb);
var google_api_annotations_pb = require('../../google/api/annotations_pb.js');
goog.object.extend(proto, google_api_annotations_pb);
var protoc$gen$swagger_options_annotations_pb = require('../../protoc-gen-swagger/options/annotations_pb.js');
goog.object.extend(proto, protoc$gen$swagger_options_annotations_pb);
goog.exportSymbol('proto.veidemann.api.config.v1.DeleteResponse', null, global);
goog.exportSymbol('proto.veidemann.api.config.v1.GetLabelKeysRequest', null, global);
goog.exportSymbol('proto.veidemann.api.config.v1.LabelKeysResponse', null, global);
goog.exportSymbol('proto.veidemann.api.config.v1.ListCountResponse', null, global);
goog.exportSymbol('proto.veidemann.api.config.v1.ListRequest', null, global);
goog.exportSymbol('proto.veidemann.api.config.v1.UpdateRequest', null, global);
goog.exportSymbol('proto.veidemann.api.config.v1.UpdateResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.config.v1.GetLabelKeysRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.veidemann.api.config.v1.GetLabelKeysRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.config.v1.GetLabelKeysRequest.displayName = 'proto.veidemann.api.config.v1.GetLabelKeysRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.config.v1.ListRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.veidemann.api.config.v1.ListRequest.repeatedFields_, null);
};
goog.inherits(proto.veidemann.api.config.v1.ListRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.config.v1.ListRequest.displayName = 'proto.veidemann.api.config.v1.ListRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.config.v1.UpdateRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.veidemann.api.config.v1.UpdateRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.config.v1.UpdateRequest.displayName = 'proto.veidemann.api.config.v1.UpdateRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.config.v1.UpdateResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.veidemann.api.config.v1.UpdateResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.config.v1.UpdateResponse.displayName = 'proto.veidemann.api.config.v1.UpdateResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.config.v1.ListCountResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.veidemann.api.config.v1.ListCountResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.config.v1.ListCountResponse.displayName = 'proto.veidemann.api.config.v1.ListCountResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.config.v1.DeleteResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.veidemann.api.config.v1.DeleteResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.config.v1.DeleteResponse.displayName = 'proto.veidemann.api.config.v1.DeleteResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.config.v1.LabelKeysResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.veidemann.api.config.v1.LabelKeysResponse.repeatedFields_, null);
};
goog.inherits(proto.veidemann.api.config.v1.LabelKeysResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.config.v1.LabelKeysResponse.displayName = 'proto.veidemann.api.config.v1.LabelKeysResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.config.v1.GetLabelKeysRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.config.v1.GetLabelKeysRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.config.v1.GetLabelKeysRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.config.v1.GetLabelKeysRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    kind: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.config.v1.GetLabelKeysRequest}
 */
proto.veidemann.api.config.v1.GetLabelKeysRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.config.v1.GetLabelKeysRequest;
  return proto.veidemann.api.config.v1.GetLabelKeysRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.config.v1.GetLabelKeysRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.config.v1.GetLabelKeysRequest}
 */
proto.veidemann.api.config.v1.GetLabelKeysRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.veidemann.api.config.v1.Kind} */ (reader.readEnum());
      msg.setKind(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.config.v1.GetLabelKeysRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.config.v1.GetLabelKeysRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.config.v1.GetLabelKeysRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.config.v1.GetLabelKeysRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKind();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
};


/**
 * optional Kind kind = 1;
 * @return {!proto.veidemann.api.config.v1.Kind}
 */
proto.veidemann.api.config.v1.GetLabelKeysRequest.prototype.getKind = function() {
  return /** @type {!proto.veidemann.api.config.v1.Kind} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.veidemann.api.config.v1.Kind} value */
proto.veidemann.api.config.v1.GetLabelKeysRequest.prototype.setKind = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.veidemann.api.config.v1.ListRequest.repeatedFields_ = [2,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.config.v1.ListRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.config.v1.ListRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.config.v1.ListRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.config.v1.ListRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    kind: jspb.Message.getFieldWithDefault(msg, 1, 0),
    idList: jspb.Message.getRepeatedField(msg, 2),
    nameRegex: jspb.Message.getFieldWithDefault(msg, 3, ""),
    labelSelectorList: jspb.Message.getRepeatedField(msg, 4),
    queryTemplate: (f = msg.getQueryTemplate()) && config_v1_resources_pb.ConfigObject.toObject(includeInstance, f),
    queryMask: (f = msg.getQueryMask()) && commons_v1_resources_pb.FieldMask.toObject(includeInstance, f),
    returnedFieldsMask: (f = msg.getReturnedFieldsMask()) && commons_v1_resources_pb.FieldMask.toObject(includeInstance, f),
    orderByPath: jspb.Message.getFieldWithDefault(msg, 8, ""),
    orderDescending: jspb.Message.getFieldWithDefault(msg, 9, false),
    pageSize: jspb.Message.getFieldWithDefault(msg, 14, 0),
    offset: jspb.Message.getFieldWithDefault(msg, 15, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.config.v1.ListRequest}
 */
proto.veidemann.api.config.v1.ListRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.config.v1.ListRequest;
  return proto.veidemann.api.config.v1.ListRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.config.v1.ListRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.config.v1.ListRequest}
 */
proto.veidemann.api.config.v1.ListRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.veidemann.api.config.v1.Kind} */ (reader.readEnum());
      msg.setKind(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.addId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setNameRegex(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addLabelSelector(value);
      break;
    case 5:
      var value = new config_v1_resources_pb.ConfigObject;
      reader.readMessage(value,config_v1_resources_pb.ConfigObject.deserializeBinaryFromReader);
      msg.setQueryTemplate(value);
      break;
    case 6:
      var value = new commons_v1_resources_pb.FieldMask;
      reader.readMessage(value,commons_v1_resources_pb.FieldMask.deserializeBinaryFromReader);
      msg.setQueryMask(value);
      break;
    case 7:
      var value = new commons_v1_resources_pb.FieldMask;
      reader.readMessage(value,commons_v1_resources_pb.FieldMask.deserializeBinaryFromReader);
      msg.setReturnedFieldsMask(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setOrderByPath(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setOrderDescending(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPageSize(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setOffset(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.config.v1.ListRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.config.v1.ListRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.config.v1.ListRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.config.v1.ListRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKind();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getIdList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      2,
      f
    );
  }
  f = message.getNameRegex();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getLabelSelectorList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
  f = message.getQueryTemplate();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      config_v1_resources_pb.ConfigObject.serializeBinaryToWriter
    );
  }
  f = message.getQueryMask();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      commons_v1_resources_pb.FieldMask.serializeBinaryToWriter
    );
  }
  f = message.getReturnedFieldsMask();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      commons_v1_resources_pb.FieldMask.serializeBinaryToWriter
    );
  }
  f = message.getOrderByPath();
  if (f.length > 0) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getOrderDescending();
  if (f) {
    writer.writeBool(
      9,
      f
    );
  }
  f = message.getPageSize();
  if (f !== 0) {
    writer.writeInt32(
      14,
      f
    );
  }
  f = message.getOffset();
  if (f !== 0) {
    writer.writeInt32(
      15,
      f
    );
  }
};


/**
 * optional Kind kind = 1;
 * @return {!proto.veidemann.api.config.v1.Kind}
 */
proto.veidemann.api.config.v1.ListRequest.prototype.getKind = function() {
  return /** @type {!proto.veidemann.api.config.v1.Kind} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.veidemann.api.config.v1.Kind} value */
proto.veidemann.api.config.v1.ListRequest.prototype.setKind = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * repeated string id = 2;
 * @return {!Array<string>}
 */
proto.veidemann.api.config.v1.ListRequest.prototype.getIdList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array<string>} value */
proto.veidemann.api.config.v1.ListRequest.prototype.setIdList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.veidemann.api.config.v1.ListRequest.prototype.addId = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.veidemann.api.config.v1.ListRequest.prototype.clearIdList = function() {
  this.setIdList([]);
};


/**
 * optional string name_regex = 3;
 * @return {string}
 */
proto.veidemann.api.config.v1.ListRequest.prototype.getNameRegex = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.veidemann.api.config.v1.ListRequest.prototype.setNameRegex = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated string label_selector = 4;
 * @return {!Array<string>}
 */
proto.veidemann.api.config.v1.ListRequest.prototype.getLabelSelectorList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/** @param {!Array<string>} value */
proto.veidemann.api.config.v1.ListRequest.prototype.setLabelSelectorList = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.veidemann.api.config.v1.ListRequest.prototype.addLabelSelector = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.veidemann.api.config.v1.ListRequest.prototype.clearLabelSelectorList = function() {
  this.setLabelSelectorList([]);
};


/**
 * optional ConfigObject query_template = 5;
 * @return {?proto.veidemann.api.config.v1.ConfigObject}
 */
proto.veidemann.api.config.v1.ListRequest.prototype.getQueryTemplate = function() {
  return /** @type{?proto.veidemann.api.config.v1.ConfigObject} */ (
    jspb.Message.getWrapperField(this, config_v1_resources_pb.ConfigObject, 5));
};


/** @param {?proto.veidemann.api.config.v1.ConfigObject|undefined} value */
proto.veidemann.api.config.v1.ListRequest.prototype.setQueryTemplate = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.veidemann.api.config.v1.ListRequest.prototype.clearQueryTemplate = function() {
  this.setQueryTemplate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.config.v1.ListRequest.prototype.hasQueryTemplate = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional veidemann.api.commons.v1.FieldMask query_mask = 6;
 * @return {?proto.veidemann.api.commons.v1.FieldMask}
 */
proto.veidemann.api.config.v1.ListRequest.prototype.getQueryMask = function() {
  return /** @type{?proto.veidemann.api.commons.v1.FieldMask} */ (
    jspb.Message.getWrapperField(this, commons_v1_resources_pb.FieldMask, 6));
};


/** @param {?proto.veidemann.api.commons.v1.FieldMask|undefined} value */
proto.veidemann.api.config.v1.ListRequest.prototype.setQueryMask = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.veidemann.api.config.v1.ListRequest.prototype.clearQueryMask = function() {
  this.setQueryMask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.config.v1.ListRequest.prototype.hasQueryMask = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional veidemann.api.commons.v1.FieldMask returned_fields_mask = 7;
 * @return {?proto.veidemann.api.commons.v1.FieldMask}
 */
proto.veidemann.api.config.v1.ListRequest.prototype.getReturnedFieldsMask = function() {
  return /** @type{?proto.veidemann.api.commons.v1.FieldMask} */ (
    jspb.Message.getWrapperField(this, commons_v1_resources_pb.FieldMask, 7));
};


/** @param {?proto.veidemann.api.commons.v1.FieldMask|undefined} value */
proto.veidemann.api.config.v1.ListRequest.prototype.setReturnedFieldsMask = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.veidemann.api.config.v1.ListRequest.prototype.clearReturnedFieldsMask = function() {
  this.setReturnedFieldsMask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.config.v1.ListRequest.prototype.hasReturnedFieldsMask = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string order_by_path = 8;
 * @return {string}
 */
proto.veidemann.api.config.v1.ListRequest.prototype.getOrderByPath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.veidemann.api.config.v1.ListRequest.prototype.setOrderByPath = function(value) {
  jspb.Message.setProto3StringField(this, 8, value);
};


/**
 * optional bool order_descending = 9;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.veidemann.api.config.v1.ListRequest.prototype.getOrderDescending = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 9, false));
};


/** @param {boolean} value */
proto.veidemann.api.config.v1.ListRequest.prototype.setOrderDescending = function(value) {
  jspb.Message.setProto3BooleanField(this, 9, value);
};


/**
 * optional int32 page_size = 14;
 * @return {number}
 */
proto.veidemann.api.config.v1.ListRequest.prototype.getPageSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.veidemann.api.config.v1.ListRequest.prototype.setPageSize = function(value) {
  jspb.Message.setProto3IntField(this, 14, value);
};


/**
 * optional int32 offset = 15;
 * @return {number}
 */
proto.veidemann.api.config.v1.ListRequest.prototype.getOffset = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.veidemann.api.config.v1.ListRequest.prototype.setOffset = function(value) {
  jspb.Message.setProto3IntField(this, 15, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.config.v1.UpdateRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.config.v1.UpdateRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.config.v1.UpdateRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.config.v1.UpdateRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    listRequest: (f = msg.getListRequest()) && proto.veidemann.api.config.v1.ListRequest.toObject(includeInstance, f),
    updateMask: (f = msg.getUpdateMask()) && commons_v1_resources_pb.FieldMask.toObject(includeInstance, f),
    updateTemplate: (f = msg.getUpdateTemplate()) && config_v1_resources_pb.ConfigObject.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.config.v1.UpdateRequest}
 */
proto.veidemann.api.config.v1.UpdateRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.config.v1.UpdateRequest;
  return proto.veidemann.api.config.v1.UpdateRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.config.v1.UpdateRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.config.v1.UpdateRequest}
 */
proto.veidemann.api.config.v1.UpdateRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.veidemann.api.config.v1.ListRequest;
      reader.readMessage(value,proto.veidemann.api.config.v1.ListRequest.deserializeBinaryFromReader);
      msg.setListRequest(value);
      break;
    case 3:
      var value = new commons_v1_resources_pb.FieldMask;
      reader.readMessage(value,commons_v1_resources_pb.FieldMask.deserializeBinaryFromReader);
      msg.setUpdateMask(value);
      break;
    case 4:
      var value = new config_v1_resources_pb.ConfigObject;
      reader.readMessage(value,config_v1_resources_pb.ConfigObject.deserializeBinaryFromReader);
      msg.setUpdateTemplate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.config.v1.UpdateRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.config.v1.UpdateRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.config.v1.UpdateRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.config.v1.UpdateRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListRequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.veidemann.api.config.v1.ListRequest.serializeBinaryToWriter
    );
  }
  f = message.getUpdateMask();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      commons_v1_resources_pb.FieldMask.serializeBinaryToWriter
    );
  }
  f = message.getUpdateTemplate();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      config_v1_resources_pb.ConfigObject.serializeBinaryToWriter
    );
  }
};


/**
 * optional ListRequest list_request = 1;
 * @return {?proto.veidemann.api.config.v1.ListRequest}
 */
proto.veidemann.api.config.v1.UpdateRequest.prototype.getListRequest = function() {
  return /** @type{?proto.veidemann.api.config.v1.ListRequest} */ (
    jspb.Message.getWrapperField(this, proto.veidemann.api.config.v1.ListRequest, 1));
};


/** @param {?proto.veidemann.api.config.v1.ListRequest|undefined} value */
proto.veidemann.api.config.v1.UpdateRequest.prototype.setListRequest = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.veidemann.api.config.v1.UpdateRequest.prototype.clearListRequest = function() {
  this.setListRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.config.v1.UpdateRequest.prototype.hasListRequest = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional veidemann.api.commons.v1.FieldMask update_mask = 3;
 * @return {?proto.veidemann.api.commons.v1.FieldMask}
 */
proto.veidemann.api.config.v1.UpdateRequest.prototype.getUpdateMask = function() {
  return /** @type{?proto.veidemann.api.commons.v1.FieldMask} */ (
    jspb.Message.getWrapperField(this, commons_v1_resources_pb.FieldMask, 3));
};


/** @param {?proto.veidemann.api.commons.v1.FieldMask|undefined} value */
proto.veidemann.api.config.v1.UpdateRequest.prototype.setUpdateMask = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.veidemann.api.config.v1.UpdateRequest.prototype.clearUpdateMask = function() {
  this.setUpdateMask(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.config.v1.UpdateRequest.prototype.hasUpdateMask = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional ConfigObject update_template = 4;
 * @return {?proto.veidemann.api.config.v1.ConfigObject}
 */
proto.veidemann.api.config.v1.UpdateRequest.prototype.getUpdateTemplate = function() {
  return /** @type{?proto.veidemann.api.config.v1.ConfigObject} */ (
    jspb.Message.getWrapperField(this, config_v1_resources_pb.ConfigObject, 4));
};


/** @param {?proto.veidemann.api.config.v1.ConfigObject|undefined} value */
proto.veidemann.api.config.v1.UpdateRequest.prototype.setUpdateTemplate = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.veidemann.api.config.v1.UpdateRequest.prototype.clearUpdateTemplate = function() {
  this.setUpdateTemplate(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.config.v1.UpdateRequest.prototype.hasUpdateTemplate = function() {
  return jspb.Message.getField(this, 4) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.config.v1.UpdateResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.config.v1.UpdateResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.config.v1.UpdateResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.config.v1.UpdateResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    updated: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.config.v1.UpdateResponse}
 */
proto.veidemann.api.config.v1.UpdateResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.config.v1.UpdateResponse;
  return proto.veidemann.api.config.v1.UpdateResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.config.v1.UpdateResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.config.v1.UpdateResponse}
 */
proto.veidemann.api.config.v1.UpdateResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setUpdated(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.config.v1.UpdateResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.config.v1.UpdateResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.config.v1.UpdateResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.config.v1.UpdateResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUpdated();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
};


/**
 * optional int64 updated = 1;
 * @return {number}
 */
proto.veidemann.api.config.v1.UpdateResponse.prototype.getUpdated = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.veidemann.api.config.v1.UpdateResponse.prototype.setUpdated = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.config.v1.ListCountResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.config.v1.ListCountResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.config.v1.ListCountResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.config.v1.ListCountResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    count: jspb.Message.getFieldWithDefault(msg, 1, 0),
    approximate: jspb.Message.getFieldWithDefault(msg, 2, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.config.v1.ListCountResponse}
 */
proto.veidemann.api.config.v1.ListCountResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.config.v1.ListCountResponse;
  return proto.veidemann.api.config.v1.ListCountResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.config.v1.ListCountResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.config.v1.ListCountResponse}
 */
proto.veidemann.api.config.v1.ListCountResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setCount(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setApproximate(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.config.v1.ListCountResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.config.v1.ListCountResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.config.v1.ListCountResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.config.v1.ListCountResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = message.getApproximate();
  if (f) {
    writer.writeBool(
      2,
      f
    );
  }
};


/**
 * optional int64 count = 1;
 * @return {number}
 */
proto.veidemann.api.config.v1.ListCountResponse.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.veidemann.api.config.v1.ListCountResponse.prototype.setCount = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional bool approximate = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.veidemann.api.config.v1.ListCountResponse.prototype.getApproximate = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.veidemann.api.config.v1.ListCountResponse.prototype.setApproximate = function(value) {
  jspb.Message.setProto3BooleanField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.config.v1.DeleteResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.config.v1.DeleteResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.config.v1.DeleteResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.config.v1.DeleteResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    deleted: jspb.Message.getFieldWithDefault(msg, 1, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.config.v1.DeleteResponse}
 */
proto.veidemann.api.config.v1.DeleteResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.config.v1.DeleteResponse;
  return proto.veidemann.api.config.v1.DeleteResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.config.v1.DeleteResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.config.v1.DeleteResponse}
 */
proto.veidemann.api.config.v1.DeleteResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDeleted(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.config.v1.DeleteResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.config.v1.DeleteResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.config.v1.DeleteResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.config.v1.DeleteResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDeleted();
  if (f) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool deleted = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.veidemann.api.config.v1.DeleteResponse.prototype.getDeleted = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.veidemann.api.config.v1.DeleteResponse.prototype.setDeleted = function(value) {
  jspb.Message.setProto3BooleanField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.veidemann.api.config.v1.LabelKeysResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.config.v1.LabelKeysResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.config.v1.LabelKeysResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.config.v1.LabelKeysResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.config.v1.LabelKeysResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    keyList: jspb.Message.getRepeatedField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.config.v1.LabelKeysResponse}
 */
proto.veidemann.api.config.v1.LabelKeysResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.config.v1.LabelKeysResponse;
  return proto.veidemann.api.config.v1.LabelKeysResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.config.v1.LabelKeysResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.config.v1.LabelKeysResponse}
 */
proto.veidemann.api.config.v1.LabelKeysResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addKey(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.config.v1.LabelKeysResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.config.v1.LabelKeysResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.config.v1.LabelKeysResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.config.v1.LabelKeysResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKeyList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string key = 1;
 * @return {!Array<string>}
 */
proto.veidemann.api.config.v1.LabelKeysResponse.prototype.getKeyList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array<string>} value */
proto.veidemann.api.config.v1.LabelKeysResponse.prototype.setKeyList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.veidemann.api.config.v1.LabelKeysResponse.prototype.addKey = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.veidemann.api.config.v1.LabelKeysResponse.prototype.clearKeyList = function() {
  this.setKeyList([]);
};


goog.object.extend(exports, proto.veidemann.api.config.v1);
