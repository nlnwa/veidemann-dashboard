/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.veidemann.api.config.v1.BrowserConfig', null, global);
goog.exportSymbol('proto.veidemann.api.config.v1.BrowserScript', null, global);
goog.exportSymbol('proto.veidemann.api.config.v1.Collection', null, global);
goog.exportSymbol('proto.veidemann.api.config.v1.Collection.RotationPolicy', null, global);
goog.exportSymbol('proto.veidemann.api.config.v1.Collection.SubCollection', null, global);
goog.exportSymbol('proto.veidemann.api.config.v1.Collection.SubCollectionType', null, global);
goog.exportSymbol('proto.veidemann.api.config.v1.ConfigObject', null, global);
goog.exportSymbol('proto.veidemann.api.config.v1.ConfigRef', null, global);
goog.exportSymbol('proto.veidemann.api.config.v1.CrawlConfig', null, global);
goog.exportSymbol('proto.veidemann.api.config.v1.CrawlEntity', null, global);
goog.exportSymbol('proto.veidemann.api.config.v1.CrawlHostGroupConfig', null, global);
goog.exportSymbol('proto.veidemann.api.config.v1.CrawlHostGroupConfig.IpRange', null, global);
goog.exportSymbol('proto.veidemann.api.config.v1.CrawlJob', null, global);
goog.exportSymbol('proto.veidemann.api.config.v1.CrawlLimitsConfig', null, global);
goog.exportSymbol('proto.veidemann.api.config.v1.CrawlScheduleConfig', null, global);
goog.exportSymbol('proto.veidemann.api.config.v1.CrawlScope', null, global);
goog.exportSymbol('proto.veidemann.api.config.v1.ExtraConfig', null, global);
goog.exportSymbol('proto.veidemann.api.config.v1.Kind', null, global);
goog.exportSymbol('proto.veidemann.api.config.v1.Label', null, global);
goog.exportSymbol('proto.veidemann.api.config.v1.Meta', null, global);
goog.exportSymbol('proto.veidemann.api.config.v1.PolitenessConfig', null, global);
goog.exportSymbol('proto.veidemann.api.config.v1.PolitenessConfig.RobotsPolicy', null, global);
goog.exportSymbol('proto.veidemann.api.config.v1.Role', null, global);
goog.exportSymbol('proto.veidemann.api.config.v1.RoleMapping', null, global);
goog.exportSymbol('proto.veidemann.api.config.v1.Seed', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.config.v1.ConfigObject = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.veidemann.api.config.v1.ConfigObject.oneofGroups_);
};
goog.inherits(proto.veidemann.api.config.v1.ConfigObject, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.config.v1.ConfigObject.displayName = 'proto.veidemann.api.config.v1.ConfigObject';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.config.v1.Meta = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.veidemann.api.config.v1.Meta.repeatedFields_, null);
};
goog.inherits(proto.veidemann.api.config.v1.Meta, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.config.v1.Meta.displayName = 'proto.veidemann.api.config.v1.Meta';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.config.v1.Label = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.veidemann.api.config.v1.Label, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.config.v1.Label.displayName = 'proto.veidemann.api.config.v1.Label';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.config.v1.ConfigRef = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.veidemann.api.config.v1.ConfigRef, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.config.v1.ConfigRef.displayName = 'proto.veidemann.api.config.v1.ConfigRef';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.config.v1.CrawlEntity = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.veidemann.api.config.v1.CrawlEntity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.config.v1.CrawlEntity.displayName = 'proto.veidemann.api.config.v1.CrawlEntity';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.config.v1.Seed = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.veidemann.api.config.v1.Seed.repeatedFields_, null);
};
goog.inherits(proto.veidemann.api.config.v1.Seed, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.config.v1.Seed.displayName = 'proto.veidemann.api.config.v1.Seed';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.config.v1.CrawlJob = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.veidemann.api.config.v1.CrawlJob, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.config.v1.CrawlJob.displayName = 'proto.veidemann.api.config.v1.CrawlJob';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.config.v1.CrawlConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.veidemann.api.config.v1.CrawlConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.config.v1.CrawlConfig.displayName = 'proto.veidemann.api.config.v1.CrawlConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.config.v1.ExtraConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.veidemann.api.config.v1.ExtraConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.config.v1.ExtraConfig.displayName = 'proto.veidemann.api.config.v1.ExtraConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.config.v1.CrawlScheduleConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.veidemann.api.config.v1.CrawlScheduleConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.config.v1.CrawlScheduleConfig.displayName = 'proto.veidemann.api.config.v1.CrawlScheduleConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.config.v1.CrawlScope = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.veidemann.api.config.v1.CrawlScope, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.config.v1.CrawlScope.displayName = 'proto.veidemann.api.config.v1.CrawlScope';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.config.v1.CrawlLimitsConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.veidemann.api.config.v1.CrawlLimitsConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.config.v1.CrawlLimitsConfig.displayName = 'proto.veidemann.api.config.v1.CrawlLimitsConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.config.v1.BrowserConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.veidemann.api.config.v1.BrowserConfig.repeatedFields_, null);
};
goog.inherits(proto.veidemann.api.config.v1.BrowserConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.config.v1.BrowserConfig.displayName = 'proto.veidemann.api.config.v1.BrowserConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.config.v1.PolitenessConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.veidemann.api.config.v1.PolitenessConfig.repeatedFields_, null);
};
goog.inherits(proto.veidemann.api.config.v1.PolitenessConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.config.v1.PolitenessConfig.displayName = 'proto.veidemann.api.config.v1.PolitenessConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.config.v1.BrowserScript = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.veidemann.api.config.v1.BrowserScript.repeatedFields_, null);
};
goog.inherits(proto.veidemann.api.config.v1.BrowserScript, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.config.v1.BrowserScript.displayName = 'proto.veidemann.api.config.v1.BrowserScript';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.config.v1.CrawlHostGroupConfig = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.veidemann.api.config.v1.CrawlHostGroupConfig.repeatedFields_, null);
};
goog.inherits(proto.veidemann.api.config.v1.CrawlHostGroupConfig, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.config.v1.CrawlHostGroupConfig.displayName = 'proto.veidemann.api.config.v1.CrawlHostGroupConfig';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.config.v1.CrawlHostGroupConfig.IpRange = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.veidemann.api.config.v1.CrawlHostGroupConfig.IpRange, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.config.v1.CrawlHostGroupConfig.IpRange.displayName = 'proto.veidemann.api.config.v1.CrawlHostGroupConfig.IpRange';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.config.v1.RoleMapping = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.veidemann.api.config.v1.RoleMapping.repeatedFields_, proto.veidemann.api.config.v1.RoleMapping.oneofGroups_);
};
goog.inherits(proto.veidemann.api.config.v1.RoleMapping, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.config.v1.RoleMapping.displayName = 'proto.veidemann.api.config.v1.RoleMapping';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.config.v1.Collection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.veidemann.api.config.v1.Collection.repeatedFields_, null);
};
goog.inherits(proto.veidemann.api.config.v1.Collection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.config.v1.Collection.displayName = 'proto.veidemann.api.config.v1.Collection';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.config.v1.Collection.SubCollection = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.veidemann.api.config.v1.Collection.SubCollection, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.config.v1.Collection.SubCollection.displayName = 'proto.veidemann.api.config.v1.Collection.SubCollection';
}

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.veidemann.api.config.v1.ConfigObject.oneofGroups_ = [[5,6,7,8,9,10,11,12,13,14,15]];

/**
 * @enum {number}
 */
proto.veidemann.api.config.v1.ConfigObject.SpecCase = {
  SPEC_NOT_SET: 0,
  CRAWL_ENTITY: 5,
  SEED: 6,
  CRAWL_JOB: 7,
  CRAWL_CONFIG: 8,
  CRAWL_SCHEDULE_CONFIG: 9,
  BROWSER_CONFIG: 10,
  POLITENESS_CONFIG: 11,
  BROWSER_SCRIPT: 12,
  CRAWL_HOST_GROUP_CONFIG: 13,
  ROLE_MAPPING: 14,
  COLLECTION: 15
};

/**
 * @return {proto.veidemann.api.config.v1.ConfigObject.SpecCase}
 */
proto.veidemann.api.config.v1.ConfigObject.prototype.getSpecCase = function() {
  return /** @type {proto.veidemann.api.config.v1.ConfigObject.SpecCase} */(jspb.Message.computeOneofCase(this, proto.veidemann.api.config.v1.ConfigObject.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.config.v1.ConfigObject.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.config.v1.ConfigObject.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.config.v1.ConfigObject} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.config.v1.ConfigObject.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    apiversion: jspb.Message.getFieldWithDefault(msg, 2, ""),
    kind: jspb.Message.getFieldWithDefault(msg, 3, 0),
    meta: (f = msg.getMeta()) && proto.veidemann.api.config.v1.Meta.toObject(includeInstance, f),
    crawlEntity: (f = msg.getCrawlEntity()) && proto.veidemann.api.config.v1.CrawlEntity.toObject(includeInstance, f),
    seed: (f = msg.getSeed()) && proto.veidemann.api.config.v1.Seed.toObject(includeInstance, f),
    crawlJob: (f = msg.getCrawlJob()) && proto.veidemann.api.config.v1.CrawlJob.toObject(includeInstance, f),
    crawlConfig: (f = msg.getCrawlConfig()) && proto.veidemann.api.config.v1.CrawlConfig.toObject(includeInstance, f),
    crawlScheduleConfig: (f = msg.getCrawlScheduleConfig()) && proto.veidemann.api.config.v1.CrawlScheduleConfig.toObject(includeInstance, f),
    browserConfig: (f = msg.getBrowserConfig()) && proto.veidemann.api.config.v1.BrowserConfig.toObject(includeInstance, f),
    politenessConfig: (f = msg.getPolitenessConfig()) && proto.veidemann.api.config.v1.PolitenessConfig.toObject(includeInstance, f),
    browserScript: (f = msg.getBrowserScript()) && proto.veidemann.api.config.v1.BrowserScript.toObject(includeInstance, f),
    crawlHostGroupConfig: (f = msg.getCrawlHostGroupConfig()) && proto.veidemann.api.config.v1.CrawlHostGroupConfig.toObject(includeInstance, f),
    roleMapping: (f = msg.getRoleMapping()) && proto.veidemann.api.config.v1.RoleMapping.toObject(includeInstance, f),
    collection: (f = msg.getCollection()) && proto.veidemann.api.config.v1.Collection.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.config.v1.ConfigObject}
 */
proto.veidemann.api.config.v1.ConfigObject.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.config.v1.ConfigObject;
  return proto.veidemann.api.config.v1.ConfigObject.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.config.v1.ConfigObject} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.config.v1.ConfigObject}
 */
proto.veidemann.api.config.v1.ConfigObject.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setApiversion(value);
      break;
    case 3:
      var value = /** @type {!proto.veidemann.api.config.v1.Kind} */ (reader.readEnum());
      msg.setKind(value);
      break;
    case 4:
      var value = new proto.veidemann.api.config.v1.Meta;
      reader.readMessage(value,proto.veidemann.api.config.v1.Meta.deserializeBinaryFromReader);
      msg.setMeta(value);
      break;
    case 5:
      var value = new proto.veidemann.api.config.v1.CrawlEntity;
      reader.readMessage(value,proto.veidemann.api.config.v1.CrawlEntity.deserializeBinaryFromReader);
      msg.setCrawlEntity(value);
      break;
    case 6:
      var value = new proto.veidemann.api.config.v1.Seed;
      reader.readMessage(value,proto.veidemann.api.config.v1.Seed.deserializeBinaryFromReader);
      msg.setSeed(value);
      break;
    case 7:
      var value = new proto.veidemann.api.config.v1.CrawlJob;
      reader.readMessage(value,proto.veidemann.api.config.v1.CrawlJob.deserializeBinaryFromReader);
      msg.setCrawlJob(value);
      break;
    case 8:
      var value = new proto.veidemann.api.config.v1.CrawlConfig;
      reader.readMessage(value,proto.veidemann.api.config.v1.CrawlConfig.deserializeBinaryFromReader);
      msg.setCrawlConfig(value);
      break;
    case 9:
      var value = new proto.veidemann.api.config.v1.CrawlScheduleConfig;
      reader.readMessage(value,proto.veidemann.api.config.v1.CrawlScheduleConfig.deserializeBinaryFromReader);
      msg.setCrawlScheduleConfig(value);
      break;
    case 10:
      var value = new proto.veidemann.api.config.v1.BrowserConfig;
      reader.readMessage(value,proto.veidemann.api.config.v1.BrowserConfig.deserializeBinaryFromReader);
      msg.setBrowserConfig(value);
      break;
    case 11:
      var value = new proto.veidemann.api.config.v1.PolitenessConfig;
      reader.readMessage(value,proto.veidemann.api.config.v1.PolitenessConfig.deserializeBinaryFromReader);
      msg.setPolitenessConfig(value);
      break;
    case 12:
      var value = new proto.veidemann.api.config.v1.BrowserScript;
      reader.readMessage(value,proto.veidemann.api.config.v1.BrowserScript.deserializeBinaryFromReader);
      msg.setBrowserScript(value);
      break;
    case 13:
      var value = new proto.veidemann.api.config.v1.CrawlHostGroupConfig;
      reader.readMessage(value,proto.veidemann.api.config.v1.CrawlHostGroupConfig.deserializeBinaryFromReader);
      msg.setCrawlHostGroupConfig(value);
      break;
    case 14:
      var value = new proto.veidemann.api.config.v1.RoleMapping;
      reader.readMessage(value,proto.veidemann.api.config.v1.RoleMapping.deserializeBinaryFromReader);
      msg.setRoleMapping(value);
      break;
    case 15:
      var value = new proto.veidemann.api.config.v1.Collection;
      reader.readMessage(value,proto.veidemann.api.config.v1.Collection.deserializeBinaryFromReader);
      msg.setCollection(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.config.v1.ConfigObject.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.config.v1.ConfigObject.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.config.v1.ConfigObject} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.config.v1.ConfigObject.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getApiversion();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getKind();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getMeta();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.veidemann.api.config.v1.Meta.serializeBinaryToWriter
    );
  }
  f = message.getCrawlEntity();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.veidemann.api.config.v1.CrawlEntity.serializeBinaryToWriter
    );
  }
  f = message.getSeed();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.veidemann.api.config.v1.Seed.serializeBinaryToWriter
    );
  }
  f = message.getCrawlJob();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.veidemann.api.config.v1.CrawlJob.serializeBinaryToWriter
    );
  }
  f = message.getCrawlConfig();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.veidemann.api.config.v1.CrawlConfig.serializeBinaryToWriter
    );
  }
  f = message.getCrawlScheduleConfig();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.veidemann.api.config.v1.CrawlScheduleConfig.serializeBinaryToWriter
    );
  }
  f = message.getBrowserConfig();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.veidemann.api.config.v1.BrowserConfig.serializeBinaryToWriter
    );
  }
  f = message.getPolitenessConfig();
  if (f != null) {
    writer.writeMessage(
      11,
      f,
      proto.veidemann.api.config.v1.PolitenessConfig.serializeBinaryToWriter
    );
  }
  f = message.getBrowserScript();
  if (f != null) {
    writer.writeMessage(
      12,
      f,
      proto.veidemann.api.config.v1.BrowserScript.serializeBinaryToWriter
    );
  }
  f = message.getCrawlHostGroupConfig();
  if (f != null) {
    writer.writeMessage(
      13,
      f,
      proto.veidemann.api.config.v1.CrawlHostGroupConfig.serializeBinaryToWriter
    );
  }
  f = message.getRoleMapping();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.veidemann.api.config.v1.RoleMapping.serializeBinaryToWriter
    );
  }
  f = message.getCollection();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      proto.veidemann.api.config.v1.Collection.serializeBinaryToWriter
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.veidemann.api.config.v1.ConfigObject.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.veidemann.api.config.v1.ConfigObject.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string apiVersion = 2;
 * @return {string}
 */
proto.veidemann.api.config.v1.ConfigObject.prototype.getApiversion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.veidemann.api.config.v1.ConfigObject.prototype.setApiversion = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional Kind kind = 3;
 * @return {!proto.veidemann.api.config.v1.Kind}
 */
proto.veidemann.api.config.v1.ConfigObject.prototype.getKind = function() {
  return /** @type {!proto.veidemann.api.config.v1.Kind} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.veidemann.api.config.v1.Kind} value */
proto.veidemann.api.config.v1.ConfigObject.prototype.setKind = function(value) {
  jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional Meta meta = 4;
 * @return {?proto.veidemann.api.config.v1.Meta}
 */
proto.veidemann.api.config.v1.ConfigObject.prototype.getMeta = function() {
  return /** @type{?proto.veidemann.api.config.v1.Meta} */ (
    jspb.Message.getWrapperField(this, proto.veidemann.api.config.v1.Meta, 4));
};


/** @param {?proto.veidemann.api.config.v1.Meta|undefined} value */
proto.veidemann.api.config.v1.ConfigObject.prototype.setMeta = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.veidemann.api.config.v1.ConfigObject.prototype.clearMeta = function() {
  this.setMeta(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.config.v1.ConfigObject.prototype.hasMeta = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional CrawlEntity crawl_entity = 5;
 * @return {?proto.veidemann.api.config.v1.CrawlEntity}
 */
proto.veidemann.api.config.v1.ConfigObject.prototype.getCrawlEntity = function() {
  return /** @type{?proto.veidemann.api.config.v1.CrawlEntity} */ (
    jspb.Message.getWrapperField(this, proto.veidemann.api.config.v1.CrawlEntity, 5));
};


/** @param {?proto.veidemann.api.config.v1.CrawlEntity|undefined} value */
proto.veidemann.api.config.v1.ConfigObject.prototype.setCrawlEntity = function(value) {
  jspb.Message.setOneofWrapperField(this, 5, proto.veidemann.api.config.v1.ConfigObject.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.veidemann.api.config.v1.ConfigObject.prototype.clearCrawlEntity = function() {
  this.setCrawlEntity(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.config.v1.ConfigObject.prototype.hasCrawlEntity = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Seed seed = 6;
 * @return {?proto.veidemann.api.config.v1.Seed}
 */
proto.veidemann.api.config.v1.ConfigObject.prototype.getSeed = function() {
  return /** @type{?proto.veidemann.api.config.v1.Seed} */ (
    jspb.Message.getWrapperField(this, proto.veidemann.api.config.v1.Seed, 6));
};


/** @param {?proto.veidemann.api.config.v1.Seed|undefined} value */
proto.veidemann.api.config.v1.ConfigObject.prototype.setSeed = function(value) {
  jspb.Message.setOneofWrapperField(this, 6, proto.veidemann.api.config.v1.ConfigObject.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.veidemann.api.config.v1.ConfigObject.prototype.clearSeed = function() {
  this.setSeed(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.config.v1.ConfigObject.prototype.hasSeed = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional CrawlJob crawl_job = 7;
 * @return {?proto.veidemann.api.config.v1.CrawlJob}
 */
proto.veidemann.api.config.v1.ConfigObject.prototype.getCrawlJob = function() {
  return /** @type{?proto.veidemann.api.config.v1.CrawlJob} */ (
    jspb.Message.getWrapperField(this, proto.veidemann.api.config.v1.CrawlJob, 7));
};


/** @param {?proto.veidemann.api.config.v1.CrawlJob|undefined} value */
proto.veidemann.api.config.v1.ConfigObject.prototype.setCrawlJob = function(value) {
  jspb.Message.setOneofWrapperField(this, 7, proto.veidemann.api.config.v1.ConfigObject.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.veidemann.api.config.v1.ConfigObject.prototype.clearCrawlJob = function() {
  this.setCrawlJob(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.config.v1.ConfigObject.prototype.hasCrawlJob = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional CrawlConfig crawl_config = 8;
 * @return {?proto.veidemann.api.config.v1.CrawlConfig}
 */
proto.veidemann.api.config.v1.ConfigObject.prototype.getCrawlConfig = function() {
  return /** @type{?proto.veidemann.api.config.v1.CrawlConfig} */ (
    jspb.Message.getWrapperField(this, proto.veidemann.api.config.v1.CrawlConfig, 8));
};


/** @param {?proto.veidemann.api.config.v1.CrawlConfig|undefined} value */
proto.veidemann.api.config.v1.ConfigObject.prototype.setCrawlConfig = function(value) {
  jspb.Message.setOneofWrapperField(this, 8, proto.veidemann.api.config.v1.ConfigObject.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.veidemann.api.config.v1.ConfigObject.prototype.clearCrawlConfig = function() {
  this.setCrawlConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.config.v1.ConfigObject.prototype.hasCrawlConfig = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional CrawlScheduleConfig crawl_schedule_config = 9;
 * @return {?proto.veidemann.api.config.v1.CrawlScheduleConfig}
 */
proto.veidemann.api.config.v1.ConfigObject.prototype.getCrawlScheduleConfig = function() {
  return /** @type{?proto.veidemann.api.config.v1.CrawlScheduleConfig} */ (
    jspb.Message.getWrapperField(this, proto.veidemann.api.config.v1.CrawlScheduleConfig, 9));
};


/** @param {?proto.veidemann.api.config.v1.CrawlScheduleConfig|undefined} value */
proto.veidemann.api.config.v1.ConfigObject.prototype.setCrawlScheduleConfig = function(value) {
  jspb.Message.setOneofWrapperField(this, 9, proto.veidemann.api.config.v1.ConfigObject.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.veidemann.api.config.v1.ConfigObject.prototype.clearCrawlScheduleConfig = function() {
  this.setCrawlScheduleConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.config.v1.ConfigObject.prototype.hasCrawlScheduleConfig = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional BrowserConfig browser_config = 10;
 * @return {?proto.veidemann.api.config.v1.BrowserConfig}
 */
proto.veidemann.api.config.v1.ConfigObject.prototype.getBrowserConfig = function() {
  return /** @type{?proto.veidemann.api.config.v1.BrowserConfig} */ (
    jspb.Message.getWrapperField(this, proto.veidemann.api.config.v1.BrowserConfig, 10));
};


/** @param {?proto.veidemann.api.config.v1.BrowserConfig|undefined} value */
proto.veidemann.api.config.v1.ConfigObject.prototype.setBrowserConfig = function(value) {
  jspb.Message.setOneofWrapperField(this, 10, proto.veidemann.api.config.v1.ConfigObject.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.veidemann.api.config.v1.ConfigObject.prototype.clearBrowserConfig = function() {
  this.setBrowserConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.config.v1.ConfigObject.prototype.hasBrowserConfig = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional PolitenessConfig politeness_config = 11;
 * @return {?proto.veidemann.api.config.v1.PolitenessConfig}
 */
proto.veidemann.api.config.v1.ConfigObject.prototype.getPolitenessConfig = function() {
  return /** @type{?proto.veidemann.api.config.v1.PolitenessConfig} */ (
    jspb.Message.getWrapperField(this, proto.veidemann.api.config.v1.PolitenessConfig, 11));
};


/** @param {?proto.veidemann.api.config.v1.PolitenessConfig|undefined} value */
proto.veidemann.api.config.v1.ConfigObject.prototype.setPolitenessConfig = function(value) {
  jspb.Message.setOneofWrapperField(this, 11, proto.veidemann.api.config.v1.ConfigObject.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.veidemann.api.config.v1.ConfigObject.prototype.clearPolitenessConfig = function() {
  this.setPolitenessConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.config.v1.ConfigObject.prototype.hasPolitenessConfig = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional BrowserScript browser_script = 12;
 * @return {?proto.veidemann.api.config.v1.BrowserScript}
 */
proto.veidemann.api.config.v1.ConfigObject.prototype.getBrowserScript = function() {
  return /** @type{?proto.veidemann.api.config.v1.BrowserScript} */ (
    jspb.Message.getWrapperField(this, proto.veidemann.api.config.v1.BrowserScript, 12));
};


/** @param {?proto.veidemann.api.config.v1.BrowserScript|undefined} value */
proto.veidemann.api.config.v1.ConfigObject.prototype.setBrowserScript = function(value) {
  jspb.Message.setOneofWrapperField(this, 12, proto.veidemann.api.config.v1.ConfigObject.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.veidemann.api.config.v1.ConfigObject.prototype.clearBrowserScript = function() {
  this.setBrowserScript(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.config.v1.ConfigObject.prototype.hasBrowserScript = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional CrawlHostGroupConfig crawl_host_group_config = 13;
 * @return {?proto.veidemann.api.config.v1.CrawlHostGroupConfig}
 */
proto.veidemann.api.config.v1.ConfigObject.prototype.getCrawlHostGroupConfig = function() {
  return /** @type{?proto.veidemann.api.config.v1.CrawlHostGroupConfig} */ (
    jspb.Message.getWrapperField(this, proto.veidemann.api.config.v1.CrawlHostGroupConfig, 13));
};


/** @param {?proto.veidemann.api.config.v1.CrawlHostGroupConfig|undefined} value */
proto.veidemann.api.config.v1.ConfigObject.prototype.setCrawlHostGroupConfig = function(value) {
  jspb.Message.setOneofWrapperField(this, 13, proto.veidemann.api.config.v1.ConfigObject.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.veidemann.api.config.v1.ConfigObject.prototype.clearCrawlHostGroupConfig = function() {
  this.setCrawlHostGroupConfig(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.config.v1.ConfigObject.prototype.hasCrawlHostGroupConfig = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional RoleMapping role_mapping = 14;
 * @return {?proto.veidemann.api.config.v1.RoleMapping}
 */
proto.veidemann.api.config.v1.ConfigObject.prototype.getRoleMapping = function() {
  return /** @type{?proto.veidemann.api.config.v1.RoleMapping} */ (
    jspb.Message.getWrapperField(this, proto.veidemann.api.config.v1.RoleMapping, 14));
};


/** @param {?proto.veidemann.api.config.v1.RoleMapping|undefined} value */
proto.veidemann.api.config.v1.ConfigObject.prototype.setRoleMapping = function(value) {
  jspb.Message.setOneofWrapperField(this, 14, proto.veidemann.api.config.v1.ConfigObject.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.veidemann.api.config.v1.ConfigObject.prototype.clearRoleMapping = function() {
  this.setRoleMapping(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.config.v1.ConfigObject.prototype.hasRoleMapping = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional Collection collection = 15;
 * @return {?proto.veidemann.api.config.v1.Collection}
 */
proto.veidemann.api.config.v1.ConfigObject.prototype.getCollection = function() {
  return /** @type{?proto.veidemann.api.config.v1.Collection} */ (
    jspb.Message.getWrapperField(this, proto.veidemann.api.config.v1.Collection, 15));
};


/** @param {?proto.veidemann.api.config.v1.Collection|undefined} value */
proto.veidemann.api.config.v1.ConfigObject.prototype.setCollection = function(value) {
  jspb.Message.setOneofWrapperField(this, 15, proto.veidemann.api.config.v1.ConfigObject.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 */
proto.veidemann.api.config.v1.ConfigObject.prototype.clearCollection = function() {
  this.setCollection(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.config.v1.ConfigObject.prototype.hasCollection = function() {
  return jspb.Message.getField(this, 15) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.veidemann.api.config.v1.Meta.repeatedFields_ = [7];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.config.v1.Meta.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.config.v1.Meta.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.config.v1.Meta} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.config.v1.Meta.toObject = function(includeInstance, msg) {
  var f, obj = {
    name: jspb.Message.getFieldWithDefault(msg, 1, ""),
    description: jspb.Message.getFieldWithDefault(msg, 2, ""),
    created: (f = msg.getCreated()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    createdBy: jspb.Message.getFieldWithDefault(msg, 4, ""),
    lastModified: (f = msg.getLastModified()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    lastModifiedBy: jspb.Message.getFieldWithDefault(msg, 6, ""),
    labelList: jspb.Message.toObjectList(msg.getLabelList(),
    proto.veidemann.api.config.v1.Label.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.config.v1.Meta}
 */
proto.veidemann.api.config.v1.Meta.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.config.v1.Meta;
  return proto.veidemann.api.config.v1.Meta.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.config.v1.Meta} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.config.v1.Meta}
 */
proto.veidemann.api.config.v1.Meta.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDescription(value);
      break;
    case 3:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setCreated(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setCreatedBy(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setLastModified(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setLastModifiedBy(value);
      break;
    case 7:
      var value = new proto.veidemann.api.config.v1.Label;
      reader.readMessage(value,proto.veidemann.api.config.v1.Label.deserializeBinaryFromReader);
      msg.addLabel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.config.v1.Meta.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.config.v1.Meta.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.config.v1.Meta} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.config.v1.Meta.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getDescription();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getCreated();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getCreatedBy();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getLastModified();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getLastModifiedBy();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getLabelList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      7,
      f,
      proto.veidemann.api.config.v1.Label.serializeBinaryToWriter
    );
  }
};


/**
 * optional string name = 1;
 * @return {string}
 */
proto.veidemann.api.config.v1.Meta.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.veidemann.api.config.v1.Meta.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string description = 2;
 * @return {string}
 */
proto.veidemann.api.config.v1.Meta.prototype.getDescription = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.veidemann.api.config.v1.Meta.prototype.setDescription = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional google.protobuf.Timestamp created = 3;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.veidemann.api.config.v1.Meta.prototype.getCreated = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 3));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.veidemann.api.config.v1.Meta.prototype.setCreated = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.veidemann.api.config.v1.Meta.prototype.clearCreated = function() {
  this.setCreated(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.config.v1.Meta.prototype.hasCreated = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string created_by = 4;
 * @return {string}
 */
proto.veidemann.api.config.v1.Meta.prototype.getCreatedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.veidemann.api.config.v1.Meta.prototype.setCreatedBy = function(value) {
  jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional google.protobuf.Timestamp last_modified = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.veidemann.api.config.v1.Meta.prototype.getLastModified = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.veidemann.api.config.v1.Meta.prototype.setLastModified = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.veidemann.api.config.v1.Meta.prototype.clearLastModified = function() {
  this.setLastModified(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.config.v1.Meta.prototype.hasLastModified = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string last_modified_by = 6;
 * @return {string}
 */
proto.veidemann.api.config.v1.Meta.prototype.getLastModifiedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.veidemann.api.config.v1.Meta.prototype.setLastModifiedBy = function(value) {
  jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * repeated Label label = 7;
 * @return {!Array<!proto.veidemann.api.config.v1.Label>}
 */
proto.veidemann.api.config.v1.Meta.prototype.getLabelList = function() {
  return /** @type{!Array<!proto.veidemann.api.config.v1.Label>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.veidemann.api.config.v1.Label, 7));
};


/** @param {!Array<!proto.veidemann.api.config.v1.Label>} value */
proto.veidemann.api.config.v1.Meta.prototype.setLabelList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 7, value);
};


/**
 * @param {!proto.veidemann.api.config.v1.Label=} opt_value
 * @param {number=} opt_index
 * @return {!proto.veidemann.api.config.v1.Label}
 */
proto.veidemann.api.config.v1.Meta.prototype.addLabel = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 7, opt_value, proto.veidemann.api.config.v1.Label, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.veidemann.api.config.v1.Meta.prototype.clearLabelList = function() {
  this.setLabelList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.config.v1.Label.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.config.v1.Label.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.config.v1.Label} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.config.v1.Label.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.config.v1.Label}
 */
proto.veidemann.api.config.v1.Label.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.config.v1.Label;
  return proto.veidemann.api.config.v1.Label.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.config.v1.Label} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.config.v1.Label}
 */
proto.veidemann.api.config.v1.Label.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.config.v1.Label.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.config.v1.Label.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.config.v1.Label} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.config.v1.Label.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.veidemann.api.config.v1.Label.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.veidemann.api.config.v1.Label.prototype.setKey = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.veidemann.api.config.v1.Label.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.veidemann.api.config.v1.Label.prototype.setValue = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.config.v1.ConfigRef.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.config.v1.ConfigRef.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.config.v1.ConfigRef} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.config.v1.ConfigRef.toObject = function(includeInstance, msg) {
  var f, obj = {
    kind: jspb.Message.getFieldWithDefault(msg, 1, 0),
    id: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.config.v1.ConfigRef}
 */
proto.veidemann.api.config.v1.ConfigRef.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.config.v1.ConfigRef;
  return proto.veidemann.api.config.v1.ConfigRef.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.config.v1.ConfigRef} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.config.v1.ConfigRef}
 */
proto.veidemann.api.config.v1.ConfigRef.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.veidemann.api.config.v1.Kind} */ (reader.readEnum());
      msg.setKind(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.config.v1.ConfigRef.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.config.v1.ConfigRef.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.config.v1.ConfigRef} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.config.v1.ConfigRef.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKind();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional Kind kind = 1;
 * @return {!proto.veidemann.api.config.v1.Kind}
 */
proto.veidemann.api.config.v1.ConfigRef.prototype.getKind = function() {
  return /** @type {!proto.veidemann.api.config.v1.Kind} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.veidemann.api.config.v1.Kind} value */
proto.veidemann.api.config.v1.ConfigRef.prototype.setKind = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string id = 2;
 * @return {string}
 */
proto.veidemann.api.config.v1.ConfigRef.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.veidemann.api.config.v1.ConfigRef.prototype.setId = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.config.v1.CrawlEntity.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.config.v1.CrawlEntity.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.config.v1.CrawlEntity} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.config.v1.CrawlEntity.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.config.v1.CrawlEntity}
 */
proto.veidemann.api.config.v1.CrawlEntity.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.config.v1.CrawlEntity;
  return proto.veidemann.api.config.v1.CrawlEntity.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.config.v1.CrawlEntity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.config.v1.CrawlEntity}
 */
proto.veidemann.api.config.v1.CrawlEntity.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.config.v1.CrawlEntity.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.config.v1.CrawlEntity.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.config.v1.CrawlEntity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.config.v1.CrawlEntity.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.veidemann.api.config.v1.Seed.repeatedFields_ = [5];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.config.v1.Seed.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.config.v1.Seed.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.config.v1.Seed} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.config.v1.Seed.toObject = function(includeInstance, msg) {
  var f, obj = {
    entityRef: (f = msg.getEntityRef()) && proto.veidemann.api.config.v1.ConfigRef.toObject(includeInstance, f),
    scope: (f = msg.getScope()) && proto.veidemann.api.config.v1.CrawlScope.toObject(includeInstance, f),
    jobRefList: jspb.Message.toObjectList(msg.getJobRefList(),
    proto.veidemann.api.config.v1.ConfigRef.toObject, includeInstance),
    disabled: jspb.Message.getFieldWithDefault(msg, 18, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.config.v1.Seed}
 */
proto.veidemann.api.config.v1.Seed.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.config.v1.Seed;
  return proto.veidemann.api.config.v1.Seed.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.config.v1.Seed} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.config.v1.Seed}
 */
proto.veidemann.api.config.v1.Seed.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = new proto.veidemann.api.config.v1.ConfigRef;
      reader.readMessage(value,proto.veidemann.api.config.v1.ConfigRef.deserializeBinaryFromReader);
      msg.setEntityRef(value);
      break;
    case 4:
      var value = new proto.veidemann.api.config.v1.CrawlScope;
      reader.readMessage(value,proto.veidemann.api.config.v1.CrawlScope.deserializeBinaryFromReader);
      msg.setScope(value);
      break;
    case 5:
      var value = new proto.veidemann.api.config.v1.ConfigRef;
      reader.readMessage(value,proto.veidemann.api.config.v1.ConfigRef.deserializeBinaryFromReader);
      msg.addJobRef(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDisabled(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.config.v1.Seed.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.config.v1.Seed.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.config.v1.Seed} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.config.v1.Seed.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getEntityRef();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.veidemann.api.config.v1.ConfigRef.serializeBinaryToWriter
    );
  }
  f = message.getScope();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.veidemann.api.config.v1.CrawlScope.serializeBinaryToWriter
    );
  }
  f = message.getJobRefList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      5,
      f,
      proto.veidemann.api.config.v1.ConfigRef.serializeBinaryToWriter
    );
  }
  f = message.getDisabled();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
};


/**
 * optional ConfigRef entity_ref = 3;
 * @return {?proto.veidemann.api.config.v1.ConfigRef}
 */
proto.veidemann.api.config.v1.Seed.prototype.getEntityRef = function() {
  return /** @type{?proto.veidemann.api.config.v1.ConfigRef} */ (
    jspb.Message.getWrapperField(this, proto.veidemann.api.config.v1.ConfigRef, 3));
};


/** @param {?proto.veidemann.api.config.v1.ConfigRef|undefined} value */
proto.veidemann.api.config.v1.Seed.prototype.setEntityRef = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.veidemann.api.config.v1.Seed.prototype.clearEntityRef = function() {
  this.setEntityRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.config.v1.Seed.prototype.hasEntityRef = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional CrawlScope scope = 4;
 * @return {?proto.veidemann.api.config.v1.CrawlScope}
 */
proto.veidemann.api.config.v1.Seed.prototype.getScope = function() {
  return /** @type{?proto.veidemann.api.config.v1.CrawlScope} */ (
    jspb.Message.getWrapperField(this, proto.veidemann.api.config.v1.CrawlScope, 4));
};


/** @param {?proto.veidemann.api.config.v1.CrawlScope|undefined} value */
proto.veidemann.api.config.v1.Seed.prototype.setScope = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.veidemann.api.config.v1.Seed.prototype.clearScope = function() {
  this.setScope(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.config.v1.Seed.prototype.hasScope = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * repeated ConfigRef job_ref = 5;
 * @return {!Array<!proto.veidemann.api.config.v1.ConfigRef>}
 */
proto.veidemann.api.config.v1.Seed.prototype.getJobRefList = function() {
  return /** @type{!Array<!proto.veidemann.api.config.v1.ConfigRef>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.veidemann.api.config.v1.ConfigRef, 5));
};


/** @param {!Array<!proto.veidemann.api.config.v1.ConfigRef>} value */
proto.veidemann.api.config.v1.Seed.prototype.setJobRefList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 5, value);
};


/**
 * @param {!proto.veidemann.api.config.v1.ConfigRef=} opt_value
 * @param {number=} opt_index
 * @return {!proto.veidemann.api.config.v1.ConfigRef}
 */
proto.veidemann.api.config.v1.Seed.prototype.addJobRef = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 5, opt_value, proto.veidemann.api.config.v1.ConfigRef, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.veidemann.api.config.v1.Seed.prototype.clearJobRefList = function() {
  this.setJobRefList([]);
};


/**
 * optional bool disabled = 18;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.veidemann.api.config.v1.Seed.prototype.getDisabled = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 18, false));
};


/** @param {boolean} value */
proto.veidemann.api.config.v1.Seed.prototype.setDisabled = function(value) {
  jspb.Message.setProto3BooleanField(this, 18, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.config.v1.CrawlJob.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.config.v1.CrawlJob.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.config.v1.CrawlJob} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.config.v1.CrawlJob.toObject = function(includeInstance, msg) {
  var f, obj = {
    scheduleRef: (f = msg.getScheduleRef()) && proto.veidemann.api.config.v1.ConfigRef.toObject(includeInstance, f),
    limits: (f = msg.getLimits()) && proto.veidemann.api.config.v1.CrawlLimitsConfig.toObject(includeInstance, f),
    crawlConfigRef: (f = msg.getCrawlConfigRef()) && proto.veidemann.api.config.v1.ConfigRef.toObject(includeInstance, f),
    disabled: jspb.Message.getFieldWithDefault(msg, 18, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.config.v1.CrawlJob}
 */
proto.veidemann.api.config.v1.CrawlJob.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.config.v1.CrawlJob;
  return proto.veidemann.api.config.v1.CrawlJob.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.config.v1.CrawlJob} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.config.v1.CrawlJob}
 */
proto.veidemann.api.config.v1.CrawlJob.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = new proto.veidemann.api.config.v1.ConfigRef;
      reader.readMessage(value,proto.veidemann.api.config.v1.ConfigRef.deserializeBinaryFromReader);
      msg.setScheduleRef(value);
      break;
    case 4:
      var value = new proto.veidemann.api.config.v1.CrawlLimitsConfig;
      reader.readMessage(value,proto.veidemann.api.config.v1.CrawlLimitsConfig.deserializeBinaryFromReader);
      msg.setLimits(value);
      break;
    case 5:
      var value = new proto.veidemann.api.config.v1.ConfigRef;
      reader.readMessage(value,proto.veidemann.api.config.v1.ConfigRef.deserializeBinaryFromReader);
      msg.setCrawlConfigRef(value);
      break;
    case 18:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setDisabled(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.config.v1.CrawlJob.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.config.v1.CrawlJob.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.config.v1.CrawlJob} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.config.v1.CrawlJob.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScheduleRef();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.veidemann.api.config.v1.ConfigRef.serializeBinaryToWriter
    );
  }
  f = message.getLimits();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.veidemann.api.config.v1.CrawlLimitsConfig.serializeBinaryToWriter
    );
  }
  f = message.getCrawlConfigRef();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.veidemann.api.config.v1.ConfigRef.serializeBinaryToWriter
    );
  }
  f = message.getDisabled();
  if (f) {
    writer.writeBool(
      18,
      f
    );
  }
};


/**
 * optional ConfigRef schedule_ref = 3;
 * @return {?proto.veidemann.api.config.v1.ConfigRef}
 */
proto.veidemann.api.config.v1.CrawlJob.prototype.getScheduleRef = function() {
  return /** @type{?proto.veidemann.api.config.v1.ConfigRef} */ (
    jspb.Message.getWrapperField(this, proto.veidemann.api.config.v1.ConfigRef, 3));
};


/** @param {?proto.veidemann.api.config.v1.ConfigRef|undefined} value */
proto.veidemann.api.config.v1.CrawlJob.prototype.setScheduleRef = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.veidemann.api.config.v1.CrawlJob.prototype.clearScheduleRef = function() {
  this.setScheduleRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.config.v1.CrawlJob.prototype.hasScheduleRef = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional CrawlLimitsConfig limits = 4;
 * @return {?proto.veidemann.api.config.v1.CrawlLimitsConfig}
 */
proto.veidemann.api.config.v1.CrawlJob.prototype.getLimits = function() {
  return /** @type{?proto.veidemann.api.config.v1.CrawlLimitsConfig} */ (
    jspb.Message.getWrapperField(this, proto.veidemann.api.config.v1.CrawlLimitsConfig, 4));
};


/** @param {?proto.veidemann.api.config.v1.CrawlLimitsConfig|undefined} value */
proto.veidemann.api.config.v1.CrawlJob.prototype.setLimits = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.veidemann.api.config.v1.CrawlJob.prototype.clearLimits = function() {
  this.setLimits(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.config.v1.CrawlJob.prototype.hasLimits = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional ConfigRef crawl_config_ref = 5;
 * @return {?proto.veidemann.api.config.v1.ConfigRef}
 */
proto.veidemann.api.config.v1.CrawlJob.prototype.getCrawlConfigRef = function() {
  return /** @type{?proto.veidemann.api.config.v1.ConfigRef} */ (
    jspb.Message.getWrapperField(this, proto.veidemann.api.config.v1.ConfigRef, 5));
};


/** @param {?proto.veidemann.api.config.v1.ConfigRef|undefined} value */
proto.veidemann.api.config.v1.CrawlJob.prototype.setCrawlConfigRef = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.veidemann.api.config.v1.CrawlJob.prototype.clearCrawlConfigRef = function() {
  this.setCrawlConfigRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.config.v1.CrawlJob.prototype.hasCrawlConfigRef = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional bool disabled = 18;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.veidemann.api.config.v1.CrawlJob.prototype.getDisabled = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 18, false));
};


/** @param {boolean} value */
proto.veidemann.api.config.v1.CrawlJob.prototype.setDisabled = function(value) {
  jspb.Message.setProto3BooleanField(this, 18, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.config.v1.CrawlConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.config.v1.CrawlConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.config.v1.CrawlConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.config.v1.CrawlConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    collectionRef: (f = msg.getCollectionRef()) && proto.veidemann.api.config.v1.ConfigRef.toObject(includeInstance, f),
    browserConfigRef: (f = msg.getBrowserConfigRef()) && proto.veidemann.api.config.v1.ConfigRef.toObject(includeInstance, f),
    politenessRef: (f = msg.getPolitenessRef()) && proto.veidemann.api.config.v1.ConfigRef.toObject(includeInstance, f),
    extra: (f = msg.getExtra()) && proto.veidemann.api.config.v1.ExtraConfig.toObject(includeInstance, f),
    minimumDnsTtlS: jspb.Message.getFieldWithDefault(msg, 10, 0),
    priorityWeight: +jspb.Message.getFieldWithDefault(msg, 11, 0.0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.config.v1.CrawlConfig}
 */
proto.veidemann.api.config.v1.CrawlConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.config.v1.CrawlConfig;
  return proto.veidemann.api.config.v1.CrawlConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.config.v1.CrawlConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.config.v1.CrawlConfig}
 */
proto.veidemann.api.config.v1.CrawlConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 6:
      var value = new proto.veidemann.api.config.v1.ConfigRef;
      reader.readMessage(value,proto.veidemann.api.config.v1.ConfigRef.deserializeBinaryFromReader);
      msg.setCollectionRef(value);
      break;
    case 7:
      var value = new proto.veidemann.api.config.v1.ConfigRef;
      reader.readMessage(value,proto.veidemann.api.config.v1.ConfigRef.deserializeBinaryFromReader);
      msg.setBrowserConfigRef(value);
      break;
    case 8:
      var value = new proto.veidemann.api.config.v1.ConfigRef;
      reader.readMessage(value,proto.veidemann.api.config.v1.ConfigRef.deserializeBinaryFromReader);
      msg.setPolitenessRef(value);
      break;
    case 9:
      var value = new proto.veidemann.api.config.v1.ExtraConfig;
      reader.readMessage(value,proto.veidemann.api.config.v1.ExtraConfig.deserializeBinaryFromReader);
      msg.setExtra(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMinimumDnsTtlS(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setPriorityWeight(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.config.v1.CrawlConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.config.v1.CrawlConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.config.v1.CrawlConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.config.v1.CrawlConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCollectionRef();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.veidemann.api.config.v1.ConfigRef.serializeBinaryToWriter
    );
  }
  f = message.getBrowserConfigRef();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      proto.veidemann.api.config.v1.ConfigRef.serializeBinaryToWriter
    );
  }
  f = message.getPolitenessRef();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      proto.veidemann.api.config.v1.ConfigRef.serializeBinaryToWriter
    );
  }
  f = message.getExtra();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.veidemann.api.config.v1.ExtraConfig.serializeBinaryToWriter
    );
  }
  f = message.getMinimumDnsTtlS();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getPriorityWeight();
  if (f !== 0.0) {
    writer.writeDouble(
      11,
      f
    );
  }
};


/**
 * optional ConfigRef collection_ref = 6;
 * @return {?proto.veidemann.api.config.v1.ConfigRef}
 */
proto.veidemann.api.config.v1.CrawlConfig.prototype.getCollectionRef = function() {
  return /** @type{?proto.veidemann.api.config.v1.ConfigRef} */ (
    jspb.Message.getWrapperField(this, proto.veidemann.api.config.v1.ConfigRef, 6));
};


/** @param {?proto.veidemann.api.config.v1.ConfigRef|undefined} value */
proto.veidemann.api.config.v1.CrawlConfig.prototype.setCollectionRef = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.veidemann.api.config.v1.CrawlConfig.prototype.clearCollectionRef = function() {
  this.setCollectionRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.config.v1.CrawlConfig.prototype.hasCollectionRef = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional ConfigRef browser_config_ref = 7;
 * @return {?proto.veidemann.api.config.v1.ConfigRef}
 */
proto.veidemann.api.config.v1.CrawlConfig.prototype.getBrowserConfigRef = function() {
  return /** @type{?proto.veidemann.api.config.v1.ConfigRef} */ (
    jspb.Message.getWrapperField(this, proto.veidemann.api.config.v1.ConfigRef, 7));
};


/** @param {?proto.veidemann.api.config.v1.ConfigRef|undefined} value */
proto.veidemann.api.config.v1.CrawlConfig.prototype.setBrowserConfigRef = function(value) {
  jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.veidemann.api.config.v1.CrawlConfig.prototype.clearBrowserConfigRef = function() {
  this.setBrowserConfigRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.config.v1.CrawlConfig.prototype.hasBrowserConfigRef = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional ConfigRef politeness_ref = 8;
 * @return {?proto.veidemann.api.config.v1.ConfigRef}
 */
proto.veidemann.api.config.v1.CrawlConfig.prototype.getPolitenessRef = function() {
  return /** @type{?proto.veidemann.api.config.v1.ConfigRef} */ (
    jspb.Message.getWrapperField(this, proto.veidemann.api.config.v1.ConfigRef, 8));
};


/** @param {?proto.veidemann.api.config.v1.ConfigRef|undefined} value */
proto.veidemann.api.config.v1.CrawlConfig.prototype.setPolitenessRef = function(value) {
  jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.veidemann.api.config.v1.CrawlConfig.prototype.clearPolitenessRef = function() {
  this.setPolitenessRef(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.config.v1.CrawlConfig.prototype.hasPolitenessRef = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional ExtraConfig extra = 9;
 * @return {?proto.veidemann.api.config.v1.ExtraConfig}
 */
proto.veidemann.api.config.v1.CrawlConfig.prototype.getExtra = function() {
  return /** @type{?proto.veidemann.api.config.v1.ExtraConfig} */ (
    jspb.Message.getWrapperField(this, proto.veidemann.api.config.v1.ExtraConfig, 9));
};


/** @param {?proto.veidemann.api.config.v1.ExtraConfig|undefined} value */
proto.veidemann.api.config.v1.CrawlConfig.prototype.setExtra = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.veidemann.api.config.v1.CrawlConfig.prototype.clearExtra = function() {
  this.setExtra(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.config.v1.CrawlConfig.prototype.hasExtra = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional int32 minimum_dns_ttl_s = 10;
 * @return {number}
 */
proto.veidemann.api.config.v1.CrawlConfig.prototype.getMinimumDnsTtlS = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.veidemann.api.config.v1.CrawlConfig.prototype.setMinimumDnsTtlS = function(value) {
  jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional double priority_weight = 11;
 * @return {number}
 */
proto.veidemann.api.config.v1.CrawlConfig.prototype.getPriorityWeight = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 11, 0.0));
};


/** @param {number} value */
proto.veidemann.api.config.v1.CrawlConfig.prototype.setPriorityWeight = function(value) {
  jspb.Message.setProto3FloatField(this, 11, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.config.v1.ExtraConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.config.v1.ExtraConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.config.v1.ExtraConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.config.v1.ExtraConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    extractText: jspb.Message.getFieldWithDefault(msg, 5, false),
    createScreenshot: jspb.Message.getFieldWithDefault(msg, 6, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.config.v1.ExtraConfig}
 */
proto.veidemann.api.config.v1.ExtraConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.config.v1.ExtraConfig;
  return proto.veidemann.api.config.v1.ExtraConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.config.v1.ExtraConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.config.v1.ExtraConfig}
 */
proto.veidemann.api.config.v1.ExtraConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 5:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setExtractText(value);
      break;
    case 6:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCreateScreenshot(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.config.v1.ExtraConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.config.v1.ExtraConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.config.v1.ExtraConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.config.v1.ExtraConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getExtractText();
  if (f) {
    writer.writeBool(
      5,
      f
    );
  }
  f = message.getCreateScreenshot();
  if (f) {
    writer.writeBool(
      6,
      f
    );
  }
};


/**
 * optional bool extract_text = 5;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.veidemann.api.config.v1.ExtraConfig.prototype.getExtractText = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 5, false));
};


/** @param {boolean} value */
proto.veidemann.api.config.v1.ExtraConfig.prototype.setExtractText = function(value) {
  jspb.Message.setProto3BooleanField(this, 5, value);
};


/**
 * optional bool create_screenshot = 6;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.veidemann.api.config.v1.ExtraConfig.prototype.getCreateScreenshot = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 6, false));
};


/** @param {boolean} value */
proto.veidemann.api.config.v1.ExtraConfig.prototype.setCreateScreenshot = function(value) {
  jspb.Message.setProto3BooleanField(this, 6, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.config.v1.CrawlScheduleConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.config.v1.CrawlScheduleConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.config.v1.CrawlScheduleConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.config.v1.CrawlScheduleConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    cronExpression: jspb.Message.getFieldWithDefault(msg, 3, ""),
    validFrom: (f = msg.getValidFrom()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    validTo: (f = msg.getValidTo()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.config.v1.CrawlScheduleConfig}
 */
proto.veidemann.api.config.v1.CrawlScheduleConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.config.v1.CrawlScheduleConfig;
  return proto.veidemann.api.config.v1.CrawlScheduleConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.config.v1.CrawlScheduleConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.config.v1.CrawlScheduleConfig}
 */
proto.veidemann.api.config.v1.CrawlScheduleConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setCronExpression(value);
      break;
    case 4:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setValidFrom(value);
      break;
    case 5:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setValidTo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.config.v1.CrawlScheduleConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.config.v1.CrawlScheduleConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.config.v1.CrawlScheduleConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.config.v1.CrawlScheduleConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCronExpression();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getValidFrom();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getValidTo();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
};


/**
 * optional string cron_expression = 3;
 * @return {string}
 */
proto.veidemann.api.config.v1.CrawlScheduleConfig.prototype.getCronExpression = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.veidemann.api.config.v1.CrawlScheduleConfig.prototype.setCronExpression = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional google.protobuf.Timestamp valid_from = 4;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.veidemann.api.config.v1.CrawlScheduleConfig.prototype.getValidFrom = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 4));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.veidemann.api.config.v1.CrawlScheduleConfig.prototype.setValidFrom = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.veidemann.api.config.v1.CrawlScheduleConfig.prototype.clearValidFrom = function() {
  this.setValidFrom(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.config.v1.CrawlScheduleConfig.prototype.hasValidFrom = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional google.protobuf.Timestamp valid_to = 5;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.veidemann.api.config.v1.CrawlScheduleConfig.prototype.getValidTo = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 5));
};


/** @param {?proto.google.protobuf.Timestamp|undefined} value */
proto.veidemann.api.config.v1.CrawlScheduleConfig.prototype.setValidTo = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


/**
 * Clears the message field making it undefined.
 */
proto.veidemann.api.config.v1.CrawlScheduleConfig.prototype.clearValidTo = function() {
  this.setValidTo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.config.v1.CrawlScheduleConfig.prototype.hasValidTo = function() {
  return jspb.Message.getField(this, 5) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.config.v1.CrawlScope.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.config.v1.CrawlScope.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.config.v1.CrawlScope} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.config.v1.CrawlScope.toObject = function(includeInstance, msg) {
  var f, obj = {
    surtPrefix: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.config.v1.CrawlScope}
 */
proto.veidemann.api.config.v1.CrawlScope.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.config.v1.CrawlScope;
  return proto.veidemann.api.config.v1.CrawlScope.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.config.v1.CrawlScope} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.config.v1.CrawlScope}
 */
proto.veidemann.api.config.v1.CrawlScope.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setSurtPrefix(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.config.v1.CrawlScope.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.config.v1.CrawlScope.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.config.v1.CrawlScope} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.config.v1.CrawlScope.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSurtPrefix();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string surt_prefix = 1;
 * @return {string}
 */
proto.veidemann.api.config.v1.CrawlScope.prototype.getSurtPrefix = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.veidemann.api.config.v1.CrawlScope.prototype.setSurtPrefix = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.config.v1.CrawlLimitsConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.config.v1.CrawlLimitsConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.config.v1.CrawlLimitsConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.config.v1.CrawlLimitsConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    depth: jspb.Message.getFieldWithDefault(msg, 1, 0),
    maxDurationS: jspb.Message.getFieldWithDefault(msg, 2, 0),
    maxBytes: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.config.v1.CrawlLimitsConfig}
 */
proto.veidemann.api.config.v1.CrawlLimitsConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.config.v1.CrawlLimitsConfig;
  return proto.veidemann.api.config.v1.CrawlLimitsConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.config.v1.CrawlLimitsConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.config.v1.CrawlLimitsConfig}
 */
proto.veidemann.api.config.v1.CrawlLimitsConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDepth(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxDurationS(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxBytes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.config.v1.CrawlLimitsConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.config.v1.CrawlLimitsConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.config.v1.CrawlLimitsConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.config.v1.CrawlLimitsConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDepth();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getMaxDurationS();
  if (f !== 0) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = message.getMaxBytes();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional int32 depth = 1;
 * @return {number}
 */
proto.veidemann.api.config.v1.CrawlLimitsConfig.prototype.getDepth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.veidemann.api.config.v1.CrawlLimitsConfig.prototype.setDepth = function(value) {
  jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int64 max_duration_s = 2;
 * @return {number}
 */
proto.veidemann.api.config.v1.CrawlLimitsConfig.prototype.getMaxDurationS = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.veidemann.api.config.v1.CrawlLimitsConfig.prototype.setMaxDurationS = function(value) {
  jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional int64 max_bytes = 3;
 * @return {number}
 */
proto.veidemann.api.config.v1.CrawlLimitsConfig.prototype.getMaxBytes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.veidemann.api.config.v1.CrawlLimitsConfig.prototype.setMaxBytes = function(value) {
  jspb.Message.setProto3IntField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.veidemann.api.config.v1.BrowserConfig.repeatedFields_ = [7,8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.config.v1.BrowserConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.config.v1.BrowserConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.config.v1.BrowserConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.config.v1.BrowserConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    userAgent: jspb.Message.getFieldWithDefault(msg, 3, ""),
    windowWidth: jspb.Message.getFieldWithDefault(msg, 4, 0),
    windowHeight: jspb.Message.getFieldWithDefault(msg, 5, 0),
    pageLoadTimeoutMs: jspb.Message.getFieldWithDefault(msg, 6, 0),
    scriptSelectorList: jspb.Message.getRepeatedField(msg, 7),
    scriptRefList: jspb.Message.toObjectList(msg.getScriptRefList(),
    proto.veidemann.api.config.v1.ConfigRef.toObject, includeInstance),
    headersMap: (f = msg.getHeadersMap()) ? f.toObject(includeInstance, undefined) : [],
    scriptParametersMap: (f = msg.getScriptParametersMap()) ? f.toObject(includeInstance, undefined) : [],
    maxInactivityTimeMs: jspb.Message.getFieldWithDefault(msg, 18, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.config.v1.BrowserConfig}
 */
proto.veidemann.api.config.v1.BrowserConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.config.v1.BrowserConfig;
  return proto.veidemann.api.config.v1.BrowserConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.config.v1.BrowserConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.config.v1.BrowserConfig}
 */
proto.veidemann.api.config.v1.BrowserConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserAgent(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWindowWidth(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setWindowHeight(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setPageLoadTimeoutMs(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.addScriptSelector(value);
      break;
    case 8:
      var value = new proto.veidemann.api.config.v1.ConfigRef;
      reader.readMessage(value,proto.veidemann.api.config.v1.ConfigRef.deserializeBinaryFromReader);
      msg.addScriptRef(value);
      break;
    case 16:
      var value = msg.getHeadersMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    case 17:
      var value = msg.getScriptParametersMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "");
         });
      break;
    case 18:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxInactivityTimeMs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.config.v1.BrowserConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.config.v1.BrowserConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.config.v1.BrowserConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.config.v1.BrowserConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserAgent();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getWindowWidth();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getWindowHeight();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getPageLoadTimeoutMs();
  if (f !== 0) {
    writer.writeInt64(
      6,
      f
    );
  }
  f = message.getScriptSelectorList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      7,
      f
    );
  }
  f = message.getScriptRefList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.veidemann.api.config.v1.ConfigRef.serializeBinaryToWriter
    );
  }
  f = message.getHeadersMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(16, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getScriptParametersMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(17, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getMaxInactivityTimeMs();
  if (f !== 0) {
    writer.writeInt64(
      18,
      f
    );
  }
};


/**
 * optional string user_agent = 3;
 * @return {string}
 */
proto.veidemann.api.config.v1.BrowserConfig.prototype.getUserAgent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.veidemann.api.config.v1.BrowserConfig.prototype.setUserAgent = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 window_width = 4;
 * @return {number}
 */
proto.veidemann.api.config.v1.BrowserConfig.prototype.getWindowWidth = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.veidemann.api.config.v1.BrowserConfig.prototype.setWindowWidth = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 window_height = 5;
 * @return {number}
 */
proto.veidemann.api.config.v1.BrowserConfig.prototype.getWindowHeight = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.veidemann.api.config.v1.BrowserConfig.prototype.setWindowHeight = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional int64 page_load_timeout_ms = 6;
 * @return {number}
 */
proto.veidemann.api.config.v1.BrowserConfig.prototype.getPageLoadTimeoutMs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.veidemann.api.config.v1.BrowserConfig.prototype.setPageLoadTimeoutMs = function(value) {
  jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * repeated string script_selector = 7;
 * @return {!Array<string>}
 */
proto.veidemann.api.config.v1.BrowserConfig.prototype.getScriptSelectorList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 7));
};


/** @param {!Array<string>} value */
proto.veidemann.api.config.v1.BrowserConfig.prototype.setScriptSelectorList = function(value) {
  jspb.Message.setField(this, 7, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.veidemann.api.config.v1.BrowserConfig.prototype.addScriptSelector = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 7, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.veidemann.api.config.v1.BrowserConfig.prototype.clearScriptSelectorList = function() {
  this.setScriptSelectorList([]);
};


/**
 * repeated ConfigRef script_ref = 8;
 * @return {!Array<!proto.veidemann.api.config.v1.ConfigRef>}
 */
proto.veidemann.api.config.v1.BrowserConfig.prototype.getScriptRefList = function() {
  return /** @type{!Array<!proto.veidemann.api.config.v1.ConfigRef>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.veidemann.api.config.v1.ConfigRef, 8));
};


/** @param {!Array<!proto.veidemann.api.config.v1.ConfigRef>} value */
proto.veidemann.api.config.v1.BrowserConfig.prototype.setScriptRefList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.veidemann.api.config.v1.ConfigRef=} opt_value
 * @param {number=} opt_index
 * @return {!proto.veidemann.api.config.v1.ConfigRef}
 */
proto.veidemann.api.config.v1.BrowserConfig.prototype.addScriptRef = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.veidemann.api.config.v1.ConfigRef, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.veidemann.api.config.v1.BrowserConfig.prototype.clearScriptRefList = function() {
  this.setScriptRefList([]);
};


/**
 * map<string, string> headers = 16;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.veidemann.api.config.v1.BrowserConfig.prototype.getHeadersMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 16, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 */
proto.veidemann.api.config.v1.BrowserConfig.prototype.clearHeadersMap = function() {
  this.getHeadersMap().clear();
};


/**
 * map<string, string> script_parameters = 17;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.veidemann.api.config.v1.BrowserConfig.prototype.getScriptParametersMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 17, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 */
proto.veidemann.api.config.v1.BrowserConfig.prototype.clearScriptParametersMap = function() {
  this.getScriptParametersMap().clear();
};


/**
 * optional int64 max_inactivity_time_ms = 18;
 * @return {number}
 */
proto.veidemann.api.config.v1.BrowserConfig.prototype.getMaxInactivityTimeMs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/** @param {number} value */
proto.veidemann.api.config.v1.BrowserConfig.prototype.setMaxInactivityTimeMs = function(value) {
  jspb.Message.setProto3IntField(this, 18, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.veidemann.api.config.v1.PolitenessConfig.repeatedFields_ = [9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.config.v1.PolitenessConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.config.v1.PolitenessConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.config.v1.PolitenessConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.config.v1.PolitenessConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    robotsPolicy: jspb.Message.getFieldWithDefault(msg, 3, 0),
    minimumRobotsValidityDurationS: jspb.Message.getFieldWithDefault(msg, 11, 0),
    customRobots: jspb.Message.getFieldWithDefault(msg, 20, ""),
    minTimeBetweenPageLoadMs: jspb.Message.getFieldWithDefault(msg, 4, 0),
    maxTimeBetweenPageLoadMs: jspb.Message.getFieldWithDefault(msg, 5, 0),
    delayFactor: +jspb.Message.getFieldWithDefault(msg, 6, 0.0),
    maxRetries: jspb.Message.getFieldWithDefault(msg, 7, 0),
    retryDelaySeconds: jspb.Message.getFieldWithDefault(msg, 8, 0),
    crawlHostGroupSelectorList: jspb.Message.getRepeatedField(msg, 9),
    useHostname: jspb.Message.getFieldWithDefault(msg, 10, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.config.v1.PolitenessConfig}
 */
proto.veidemann.api.config.v1.PolitenessConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.config.v1.PolitenessConfig;
  return proto.veidemann.api.config.v1.PolitenessConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.config.v1.PolitenessConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.config.v1.PolitenessConfig}
 */
proto.veidemann.api.config.v1.PolitenessConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = /** @type {!proto.veidemann.api.config.v1.PolitenessConfig.RobotsPolicy} */ (reader.readEnum());
      msg.setRobotsPolicy(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMinimumRobotsValidityDurationS(value);
      break;
    case 20:
      var value = /** @type {string} */ (reader.readString());
      msg.setCustomRobots(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMinTimeBetweenPageLoadMs(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMaxTimeBetweenPageLoadMs(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDelayFactor(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxRetries(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRetryDelaySeconds(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.addCrawlHostGroupSelector(value);
      break;
    case 10:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setUseHostname(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.config.v1.PolitenessConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.config.v1.PolitenessConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.config.v1.PolitenessConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.config.v1.PolitenessConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRobotsPolicy();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
  f = message.getMinimumRobotsValidityDurationS();
  if (f !== 0) {
    writer.writeInt32(
      11,
      f
    );
  }
  f = message.getCustomRobots();
  if (f.length > 0) {
    writer.writeString(
      20,
      f
    );
  }
  f = message.getMinTimeBetweenPageLoadMs();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getMaxTimeBetweenPageLoadMs();
  if (f !== 0) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = message.getDelayFactor();
  if (f !== 0.0) {
    writer.writeFloat(
      6,
      f
    );
  }
  f = message.getMaxRetries();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getRetryDelaySeconds();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getCrawlHostGroupSelectorList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      9,
      f
    );
  }
  f = message.getUseHostname();
  if (f) {
    writer.writeBool(
      10,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.veidemann.api.config.v1.PolitenessConfig.RobotsPolicy = {
  OBEY_ROBOTS: 0,
  IGNORE_ROBOTS: 1,
  CUSTOM_ROBOTS: 2
};

/**
 * optional RobotsPolicy robots_policy = 3;
 * @return {!proto.veidemann.api.config.v1.PolitenessConfig.RobotsPolicy}
 */
proto.veidemann.api.config.v1.PolitenessConfig.prototype.getRobotsPolicy = function() {
  return /** @type {!proto.veidemann.api.config.v1.PolitenessConfig.RobotsPolicy} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {!proto.veidemann.api.config.v1.PolitenessConfig.RobotsPolicy} value */
proto.veidemann.api.config.v1.PolitenessConfig.prototype.setRobotsPolicy = function(value) {
  jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional int32 minimum_robots_validity_duration_s = 11;
 * @return {number}
 */
proto.veidemann.api.config.v1.PolitenessConfig.prototype.getMinimumRobotsValidityDurationS = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.veidemann.api.config.v1.PolitenessConfig.prototype.setMinimumRobotsValidityDurationS = function(value) {
  jspb.Message.setProto3IntField(this, 11, value);
};


/**
 * optional string custom_robots = 20;
 * @return {string}
 */
proto.veidemann.api.config.v1.PolitenessConfig.prototype.getCustomRobots = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 20, ""));
};


/** @param {string} value */
proto.veidemann.api.config.v1.PolitenessConfig.prototype.setCustomRobots = function(value) {
  jspb.Message.setProto3StringField(this, 20, value);
};


/**
 * optional int64 min_time_between_page_load_ms = 4;
 * @return {number}
 */
proto.veidemann.api.config.v1.PolitenessConfig.prototype.getMinTimeBetweenPageLoadMs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.veidemann.api.config.v1.PolitenessConfig.prototype.setMinTimeBetweenPageLoadMs = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int64 max_time_between_page_load_ms = 5;
 * @return {number}
 */
proto.veidemann.api.config.v1.PolitenessConfig.prototype.getMaxTimeBetweenPageLoadMs = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.veidemann.api.config.v1.PolitenessConfig.prototype.setMaxTimeBetweenPageLoadMs = function(value) {
  jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional float delay_factor = 6;
 * @return {number}
 */
proto.veidemann.api.config.v1.PolitenessConfig.prototype.getDelayFactor = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 6, 0.0));
};


/** @param {number} value */
proto.veidemann.api.config.v1.PolitenessConfig.prototype.setDelayFactor = function(value) {
  jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional int32 max_retries = 7;
 * @return {number}
 */
proto.veidemann.api.config.v1.PolitenessConfig.prototype.getMaxRetries = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.veidemann.api.config.v1.PolitenessConfig.prototype.setMaxRetries = function(value) {
  jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 retry_delay_seconds = 8;
 * @return {number}
 */
proto.veidemann.api.config.v1.PolitenessConfig.prototype.getRetryDelaySeconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.veidemann.api.config.v1.PolitenessConfig.prototype.setRetryDelaySeconds = function(value) {
  jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * repeated string crawl_host_group_selector = 9;
 * @return {!Array<string>}
 */
proto.veidemann.api.config.v1.PolitenessConfig.prototype.getCrawlHostGroupSelectorList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 9));
};


/** @param {!Array<string>} value */
proto.veidemann.api.config.v1.PolitenessConfig.prototype.setCrawlHostGroupSelectorList = function(value) {
  jspb.Message.setField(this, 9, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.veidemann.api.config.v1.PolitenessConfig.prototype.addCrawlHostGroupSelector = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 9, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.veidemann.api.config.v1.PolitenessConfig.prototype.clearCrawlHostGroupSelectorList = function() {
  this.setCrawlHostGroupSelectorList([]);
};


/**
 * optional bool use_hostname = 10;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.veidemann.api.config.v1.PolitenessConfig.prototype.getUseHostname = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 10, false));
};


/** @param {boolean} value */
proto.veidemann.api.config.v1.PolitenessConfig.prototype.setUseHostname = function(value) {
  jspb.Message.setProto3BooleanField(this, 10, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.veidemann.api.config.v1.BrowserScript.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.config.v1.BrowserScript.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.config.v1.BrowserScript.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.config.v1.BrowserScript} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.config.v1.BrowserScript.toObject = function(includeInstance, msg) {
  var f, obj = {
    script: jspb.Message.getFieldWithDefault(msg, 3, ""),
    urlRegexpList: jspb.Message.getRepeatedField(msg, 4)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.config.v1.BrowserScript}
 */
proto.veidemann.api.config.v1.BrowserScript.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.config.v1.BrowserScript;
  return proto.veidemann.api.config.v1.BrowserScript.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.config.v1.BrowserScript} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.config.v1.BrowserScript}
 */
proto.veidemann.api.config.v1.BrowserScript.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setScript(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.addUrlRegexp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.config.v1.BrowserScript.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.config.v1.BrowserScript.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.config.v1.BrowserScript} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.config.v1.BrowserScript.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getScript();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getUrlRegexpList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      4,
      f
    );
  }
};


/**
 * optional string script = 3;
 * @return {string}
 */
proto.veidemann.api.config.v1.BrowserScript.prototype.getScript = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.veidemann.api.config.v1.BrowserScript.prototype.setScript = function(value) {
  jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * repeated string url_regexp = 4;
 * @return {!Array<string>}
 */
proto.veidemann.api.config.v1.BrowserScript.prototype.getUrlRegexpList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 4));
};


/** @param {!Array<string>} value */
proto.veidemann.api.config.v1.BrowserScript.prototype.setUrlRegexpList = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 */
proto.veidemann.api.config.v1.BrowserScript.prototype.addUrlRegexp = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.veidemann.api.config.v1.BrowserScript.prototype.clearUrlRegexpList = function() {
  this.setUrlRegexpList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.veidemann.api.config.v1.CrawlHostGroupConfig.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.config.v1.CrawlHostGroupConfig.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.config.v1.CrawlHostGroupConfig.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.config.v1.CrawlHostGroupConfig} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.config.v1.CrawlHostGroupConfig.toObject = function(includeInstance, msg) {
  var f, obj = {
    ipRangeList: jspb.Message.toObjectList(msg.getIpRangeList(),
    proto.veidemann.api.config.v1.CrawlHostGroupConfig.IpRange.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.config.v1.CrawlHostGroupConfig}
 */
proto.veidemann.api.config.v1.CrawlHostGroupConfig.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.config.v1.CrawlHostGroupConfig;
  return proto.veidemann.api.config.v1.CrawlHostGroupConfig.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.config.v1.CrawlHostGroupConfig} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.config.v1.CrawlHostGroupConfig}
 */
proto.veidemann.api.config.v1.CrawlHostGroupConfig.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 3:
      var value = new proto.veidemann.api.config.v1.CrawlHostGroupConfig.IpRange;
      reader.readMessage(value,proto.veidemann.api.config.v1.CrawlHostGroupConfig.IpRange.deserializeBinaryFromReader);
      msg.addIpRange(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.config.v1.CrawlHostGroupConfig.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.config.v1.CrawlHostGroupConfig.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.config.v1.CrawlHostGroupConfig} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.config.v1.CrawlHostGroupConfig.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIpRangeList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.veidemann.api.config.v1.CrawlHostGroupConfig.IpRange.serializeBinaryToWriter
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.config.v1.CrawlHostGroupConfig.IpRange.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.config.v1.CrawlHostGroupConfig.IpRange.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.config.v1.CrawlHostGroupConfig.IpRange} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.config.v1.CrawlHostGroupConfig.IpRange.toObject = function(includeInstance, msg) {
  var f, obj = {
    ipFrom: jspb.Message.getFieldWithDefault(msg, 1, ""),
    ipTo: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.config.v1.CrawlHostGroupConfig.IpRange}
 */
proto.veidemann.api.config.v1.CrawlHostGroupConfig.IpRange.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.config.v1.CrawlHostGroupConfig.IpRange;
  return proto.veidemann.api.config.v1.CrawlHostGroupConfig.IpRange.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.config.v1.CrawlHostGroupConfig.IpRange} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.config.v1.CrawlHostGroupConfig.IpRange}
 */
proto.veidemann.api.config.v1.CrawlHostGroupConfig.IpRange.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setIpFrom(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setIpTo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.config.v1.CrawlHostGroupConfig.IpRange.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.config.v1.CrawlHostGroupConfig.IpRange.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.config.v1.CrawlHostGroupConfig.IpRange} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.config.v1.CrawlHostGroupConfig.IpRange.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getIpFrom();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getIpTo();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string ip_from = 1;
 * @return {string}
 */
proto.veidemann.api.config.v1.CrawlHostGroupConfig.IpRange.prototype.getIpFrom = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.veidemann.api.config.v1.CrawlHostGroupConfig.IpRange.prototype.setIpFrom = function(value) {
  jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string ip_to = 2;
 * @return {string}
 */
proto.veidemann.api.config.v1.CrawlHostGroupConfig.IpRange.prototype.getIpTo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.veidemann.api.config.v1.CrawlHostGroupConfig.IpRange.prototype.setIpTo = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * repeated IpRange ip_range = 3;
 * @return {!Array<!proto.veidemann.api.config.v1.CrawlHostGroupConfig.IpRange>}
 */
proto.veidemann.api.config.v1.CrawlHostGroupConfig.prototype.getIpRangeList = function() {
  return /** @type{!Array<!proto.veidemann.api.config.v1.CrawlHostGroupConfig.IpRange>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.veidemann.api.config.v1.CrawlHostGroupConfig.IpRange, 3));
};


/** @param {!Array<!proto.veidemann.api.config.v1.CrawlHostGroupConfig.IpRange>} value */
proto.veidemann.api.config.v1.CrawlHostGroupConfig.prototype.setIpRangeList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.veidemann.api.config.v1.CrawlHostGroupConfig.IpRange=} opt_value
 * @param {number=} opt_index
 * @return {!proto.veidemann.api.config.v1.CrawlHostGroupConfig.IpRange}
 */
proto.veidemann.api.config.v1.CrawlHostGroupConfig.prototype.addIpRange = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.veidemann.api.config.v1.CrawlHostGroupConfig.IpRange, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.veidemann.api.config.v1.CrawlHostGroupConfig.prototype.clearIpRangeList = function() {
  this.setIpRangeList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.veidemann.api.config.v1.RoleMapping.repeatedFields_ = [4];

/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.veidemann.api.config.v1.RoleMapping.oneofGroups_ = [[2,3]];

/**
 * @enum {number}
 */
proto.veidemann.api.config.v1.RoleMapping.EmailOrGroupCase = {
  EMAIL_OR_GROUP_NOT_SET: 0,
  EMAIL: 2,
  GROUP: 3
};

/**
 * @return {proto.veidemann.api.config.v1.RoleMapping.EmailOrGroupCase}
 */
proto.veidemann.api.config.v1.RoleMapping.prototype.getEmailOrGroupCase = function() {
  return /** @type {proto.veidemann.api.config.v1.RoleMapping.EmailOrGroupCase} */(jspb.Message.computeOneofCase(this, proto.veidemann.api.config.v1.RoleMapping.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.config.v1.RoleMapping.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.config.v1.RoleMapping.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.config.v1.RoleMapping} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.config.v1.RoleMapping.toObject = function(includeInstance, msg) {
  var f, obj = {
    email: jspb.Message.getFieldWithDefault(msg, 2, ""),
    group: jspb.Message.getFieldWithDefault(msg, 3, ""),
    roleList: jspb.Message.getRepeatedField(msg, 4)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.config.v1.RoleMapping}
 */
proto.veidemann.api.config.v1.RoleMapping.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.config.v1.RoleMapping;
  return proto.veidemann.api.config.v1.RoleMapping.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.config.v1.RoleMapping} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.config.v1.RoleMapping}
 */
proto.veidemann.api.config.v1.RoleMapping.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setEmail(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroup(value);
      break;
    case 4:
      var value = /** @type {!Array<!proto.veidemann.api.config.v1.Role>} */ (reader.readPackedEnum());
      msg.setRoleList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.config.v1.RoleMapping.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.config.v1.RoleMapping.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.config.v1.RoleMapping} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.config.v1.RoleMapping.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getRoleList();
  if (f.length > 0) {
    writer.writePackedEnum(
      4,
      f
    );
  }
};


/**
 * optional string email = 2;
 * @return {string}
 */
proto.veidemann.api.config.v1.RoleMapping.prototype.getEmail = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.veidemann.api.config.v1.RoleMapping.prototype.setEmail = function(value) {
  jspb.Message.setOneofField(this, 2, proto.veidemann.api.config.v1.RoleMapping.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 */
proto.veidemann.api.config.v1.RoleMapping.prototype.clearEmail = function() {
  jspb.Message.setOneofField(this, 2, proto.veidemann.api.config.v1.RoleMapping.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.config.v1.RoleMapping.prototype.hasEmail = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string group = 3;
 * @return {string}
 */
proto.veidemann.api.config.v1.RoleMapping.prototype.getGroup = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.veidemann.api.config.v1.RoleMapping.prototype.setGroup = function(value) {
  jspb.Message.setOneofField(this, 3, proto.veidemann.api.config.v1.RoleMapping.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 */
proto.veidemann.api.config.v1.RoleMapping.prototype.clearGroup = function() {
  jspb.Message.setOneofField(this, 3, proto.veidemann.api.config.v1.RoleMapping.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.config.v1.RoleMapping.prototype.hasGroup = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated Role role = 4;
 * @return {!Array<!proto.veidemann.api.config.v1.Role>}
 */
proto.veidemann.api.config.v1.RoleMapping.prototype.getRoleList = function() {
  return /** @type {!Array<!proto.veidemann.api.config.v1.Role>} */ (jspb.Message.getRepeatedField(this, 4));
};


/** @param {!Array<!proto.veidemann.api.config.v1.Role>} value */
proto.veidemann.api.config.v1.RoleMapping.prototype.setRoleList = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!proto.veidemann.api.config.v1.Role} value
 * @param {number=} opt_index
 */
proto.veidemann.api.config.v1.RoleMapping.prototype.addRole = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.veidemann.api.config.v1.RoleMapping.prototype.clearRoleList = function() {
  this.setRoleList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.veidemann.api.config.v1.Collection.repeatedFields_ = [10];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.config.v1.Collection.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.config.v1.Collection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.config.v1.Collection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.config.v1.Collection.toObject = function(includeInstance, msg) {
  var f, obj = {
    collectionDedupPolicy: jspb.Message.getFieldWithDefault(msg, 1, 0),
    fileRotationPolicy: jspb.Message.getFieldWithDefault(msg, 2, 0),
    compress: jspb.Message.getFieldWithDefault(msg, 3, false),
    fileSize: jspb.Message.getFieldWithDefault(msg, 4, 0),
    subCollectionsList: jspb.Message.toObjectList(msg.getSubCollectionsList(),
    proto.veidemann.api.config.v1.Collection.SubCollection.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.config.v1.Collection}
 */
proto.veidemann.api.config.v1.Collection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.config.v1.Collection;
  return proto.veidemann.api.config.v1.Collection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.config.v1.Collection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.config.v1.Collection}
 */
proto.veidemann.api.config.v1.Collection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.veidemann.api.config.v1.Collection.RotationPolicy} */ (reader.readEnum());
      msg.setCollectionDedupPolicy(value);
      break;
    case 2:
      var value = /** @type {!proto.veidemann.api.config.v1.Collection.RotationPolicy} */ (reader.readEnum());
      msg.setFileRotationPolicy(value);
      break;
    case 3:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCompress(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setFileSize(value);
      break;
    case 10:
      var value = new proto.veidemann.api.config.v1.Collection.SubCollection;
      reader.readMessage(value,proto.veidemann.api.config.v1.Collection.SubCollection.deserializeBinaryFromReader);
      msg.addSubCollections(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.config.v1.Collection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.config.v1.Collection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.config.v1.Collection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.config.v1.Collection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCollectionDedupPolicy();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getFileRotationPolicy();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getCompress();
  if (f) {
    writer.writeBool(
      3,
      f
    );
  }
  f = message.getFileSize();
  if (f !== 0) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = message.getSubCollectionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      10,
      f,
      proto.veidemann.api.config.v1.Collection.SubCollection.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.veidemann.api.config.v1.Collection.RotationPolicy = {
  NONE: 0,
  HOURLY: 1,
  DAILY: 2,
  MONTHLY: 3,
  YEARLY: 4
};

/**
 * @enum {number}
 */
proto.veidemann.api.config.v1.Collection.SubCollectionType = {
  UNDEFINED: 0,
  SCREENSHOT: 1,
  DNS: 2
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.config.v1.Collection.SubCollection.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.config.v1.Collection.SubCollection.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.config.v1.Collection.SubCollection} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.config.v1.Collection.SubCollection.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    name: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.config.v1.Collection.SubCollection}
 */
proto.veidemann.api.config.v1.Collection.SubCollection.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.config.v1.Collection.SubCollection;
  return proto.veidemann.api.config.v1.Collection.SubCollection.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.config.v1.Collection.SubCollection} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.config.v1.Collection.SubCollection}
 */
proto.veidemann.api.config.v1.Collection.SubCollection.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.veidemann.api.config.v1.Collection.SubCollectionType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.config.v1.Collection.SubCollection.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.config.v1.Collection.SubCollection.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.config.v1.Collection.SubCollection} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.config.v1.Collection.SubCollection.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional SubCollectionType type = 1;
 * @return {!proto.veidemann.api.config.v1.Collection.SubCollectionType}
 */
proto.veidemann.api.config.v1.Collection.SubCollection.prototype.getType = function() {
  return /** @type {!proto.veidemann.api.config.v1.Collection.SubCollectionType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.veidemann.api.config.v1.Collection.SubCollectionType} value */
proto.veidemann.api.config.v1.Collection.SubCollection.prototype.setType = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.veidemann.api.config.v1.Collection.SubCollection.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.veidemann.api.config.v1.Collection.SubCollection.prototype.setName = function(value) {
  jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional RotationPolicy collection_dedup_policy = 1;
 * @return {!proto.veidemann.api.config.v1.Collection.RotationPolicy}
 */
proto.veidemann.api.config.v1.Collection.prototype.getCollectionDedupPolicy = function() {
  return /** @type {!proto.veidemann.api.config.v1.Collection.RotationPolicy} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {!proto.veidemann.api.config.v1.Collection.RotationPolicy} value */
proto.veidemann.api.config.v1.Collection.prototype.setCollectionDedupPolicy = function(value) {
  jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional RotationPolicy file_rotation_policy = 2;
 * @return {!proto.veidemann.api.config.v1.Collection.RotationPolicy}
 */
proto.veidemann.api.config.v1.Collection.prototype.getFileRotationPolicy = function() {
  return /** @type {!proto.veidemann.api.config.v1.Collection.RotationPolicy} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {!proto.veidemann.api.config.v1.Collection.RotationPolicy} value */
proto.veidemann.api.config.v1.Collection.prototype.setFileRotationPolicy = function(value) {
  jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional bool compress = 3;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.veidemann.api.config.v1.Collection.prototype.getCompress = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 3, false));
};


/** @param {boolean} value */
proto.veidemann.api.config.v1.Collection.prototype.setCompress = function(value) {
  jspb.Message.setProto3BooleanField(this, 3, value);
};


/**
 * optional int64 file_size = 4;
 * @return {number}
 */
proto.veidemann.api.config.v1.Collection.prototype.getFileSize = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.veidemann.api.config.v1.Collection.prototype.setFileSize = function(value) {
  jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * repeated SubCollection sub_collections = 10;
 * @return {!Array<!proto.veidemann.api.config.v1.Collection.SubCollection>}
 */
proto.veidemann.api.config.v1.Collection.prototype.getSubCollectionsList = function() {
  return /** @type{!Array<!proto.veidemann.api.config.v1.Collection.SubCollection>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.veidemann.api.config.v1.Collection.SubCollection, 10));
};


/** @param {!Array<!proto.veidemann.api.config.v1.Collection.SubCollection>} value */
proto.veidemann.api.config.v1.Collection.prototype.setSubCollectionsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 10, value);
};


/**
 * @param {!proto.veidemann.api.config.v1.Collection.SubCollection=} opt_value
 * @param {number=} opt_index
 * @return {!proto.veidemann.api.config.v1.Collection.SubCollection}
 */
proto.veidemann.api.config.v1.Collection.prototype.addSubCollections = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 10, opt_value, proto.veidemann.api.config.v1.Collection.SubCollection, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 */
proto.veidemann.api.config.v1.Collection.prototype.clearSubCollectionsList = function() {
  this.setSubCollectionsList([]);
};


/**
 * @enum {number}
 */
proto.veidemann.api.config.v1.Kind = {
  UNDEFINED: 0,
  CRAWLENTITY: 5,
  SEED: 6,
  CRAWLJOB: 7,
  CRAWLCONFIG: 8,
  CRAWLSCHEDULECONFIG: 9,
  BROWSERCONFIG: 10,
  POLITENESSCONFIG: 11,
  BROWSERSCRIPT: 12,
  CRAWLHOSTGROUPCONFIG: 13,
  ROLEMAPPING: 14,
  COLLECTION: 15
};

/**
 * @enum {number}
 */
proto.veidemann.api.config.v1.Role = {
  ANY_USER: 0,
  ANY: 1,
  ADMIN: 2,
  CURATOR: 3,
  READONLY: 4,
  OPERATOR: 5,
  SYSTEM: 6
};

goog.object.extend(exports, proto.veidemann.api.config.v1);
