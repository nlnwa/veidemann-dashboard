// source: eventhandler/v1/resources.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!
/* eslint-disable */
// @ts-nocheck

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
goog.exportSymbol('proto.veidemann.api.eventhandler.v1.Activity', null, global);
goog.exportSymbol('proto.veidemann.api.eventhandler.v1.Activity.Change', null, global);
goog.exportSymbol('proto.veidemann.api.eventhandler.v1.Activity.ChangeType', null, global);
goog.exportSymbol('proto.veidemann.api.eventhandler.v1.Data', null, global);
goog.exportSymbol('proto.veidemann.api.eventhandler.v1.EventObject', null, global);
goog.exportSymbol('proto.veidemann.api.eventhandler.v1.EventObject.Severity', null, global);
goog.exportSymbol('proto.veidemann.api.eventhandler.v1.EventObject.State', null, global);
goog.exportSymbol('proto.veidemann.api.eventhandler.v1.EventRef', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.eventhandler.v1.EventObject = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.veidemann.api.eventhandler.v1.EventObject.repeatedFields_, null);
};
goog.inherits(proto.veidemann.api.eventhandler.v1.EventObject, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.eventhandler.v1.EventObject.displayName = 'proto.veidemann.api.eventhandler.v1.EventObject';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.eventhandler.v1.EventRef = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.veidemann.api.eventhandler.v1.EventRef, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.eventhandler.v1.EventRef.displayName = 'proto.veidemann.api.eventhandler.v1.EventRef';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.eventhandler.v1.Activity = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.veidemann.api.eventhandler.v1.Activity.repeatedFields_, null);
};
goog.inherits(proto.veidemann.api.eventhandler.v1.Activity, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.eventhandler.v1.Activity.displayName = 'proto.veidemann.api.eventhandler.v1.Activity';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.eventhandler.v1.Activity.Change = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.veidemann.api.eventhandler.v1.Activity.Change, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.eventhandler.v1.Activity.Change.displayName = 'proto.veidemann.api.eventhandler.v1.Activity.Change';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.veidemann.api.eventhandler.v1.Data = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.veidemann.api.eventhandler.v1.Data, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.veidemann.api.eventhandler.v1.Data.displayName = 'proto.veidemann.api.eventhandler.v1.Data';
}

/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.veidemann.api.eventhandler.v1.EventObject.repeatedFields_ = [6,8,9];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.eventhandler.v1.EventObject.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.eventhandler.v1.EventObject.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.eventhandler.v1.EventObject} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.eventhandler.v1.EventObject.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    type: jspb.Message.getFieldWithDefault(msg, 2, ""),
    source: jspb.Message.getFieldWithDefault(msg, 3, ""),
    state: jspb.Message.getFieldWithDefault(msg, 4, 0),
    assignee: jspb.Message.getFieldWithDefault(msg, 5, ""),
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.veidemann.api.eventhandler.v1.Data.toObject, includeInstance),
    severity: jspb.Message.getFieldWithDefault(msg, 7, 0),
    labelList: (f = jspb.Message.getRepeatedField(msg, 8)) == null ? undefined : f,
    activityList: jspb.Message.toObjectList(msg.getActivityList(),
    proto.veidemann.api.eventhandler.v1.Activity.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.eventhandler.v1.EventObject}
 */
proto.veidemann.api.eventhandler.v1.EventObject.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.eventhandler.v1.EventObject;
  return proto.veidemann.api.eventhandler.v1.EventObject.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.eventhandler.v1.EventObject} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.eventhandler.v1.EventObject}
 */
proto.veidemann.api.eventhandler.v1.EventObject.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setType(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setSource(value);
      break;
    case 4:
      var value = /** @type {!proto.veidemann.api.eventhandler.v1.EventObject.State} */ (reader.readEnum());
      msg.setState(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAssignee(value);
      break;
    case 6:
      var value = new proto.veidemann.api.eventhandler.v1.Data;
      reader.readMessage(value,proto.veidemann.api.eventhandler.v1.Data.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    case 7:
      var value = /** @type {!proto.veidemann.api.eventhandler.v1.EventObject.Severity} */ (reader.readEnum());
      msg.setSeverity(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.addLabel(value);
      break;
    case 9:
      var value = new proto.veidemann.api.eventhandler.v1.Activity;
      reader.readMessage(value,proto.veidemann.api.eventhandler.v1.Activity.deserializeBinaryFromReader);
      msg.addActivity(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.eventhandler.v1.EventObject.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.eventhandler.v1.EventObject.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.eventhandler.v1.EventObject} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.eventhandler.v1.EventObject.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getType();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getSource();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getState();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getAssignee();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      6,
      f,
      proto.veidemann.api.eventhandler.v1.Data.serializeBinaryToWriter
    );
  }
  f = message.getSeverity();
  if (f !== 0.0) {
    writer.writeEnum(
      7,
      f
    );
  }
  f = message.getLabelList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      8,
      f
    );
  }
  f = message.getActivityList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      9,
      f,
      proto.veidemann.api.eventhandler.v1.Activity.serializeBinaryToWriter
    );
  }
};


/**
 * @enum {number}
 */
proto.veidemann.api.eventhandler.v1.EventObject.State = {
  NEW: 0,
  OPEN: 1,
  CLOSED: 2
};

/**
 * @enum {number}
 */
proto.veidemann.api.eventhandler.v1.EventObject.Severity = {
  INFO: 0,
  WARN: 1,
  ERROR: 2
};

/**
 * optional string id = 1;
 * @return {string}
 */
proto.veidemann.api.eventhandler.v1.EventObject.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.veidemann.api.eventhandler.v1.EventObject} returns this
 */
proto.veidemann.api.eventhandler.v1.EventObject.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string type = 2;
 * @return {string}
 */
proto.veidemann.api.eventhandler.v1.EventObject.prototype.getType = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.veidemann.api.eventhandler.v1.EventObject} returns this
 */
proto.veidemann.api.eventhandler.v1.EventObject.prototype.setType = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string source = 3;
 * @return {string}
 */
proto.veidemann.api.eventhandler.v1.EventObject.prototype.getSource = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.veidemann.api.eventhandler.v1.EventObject} returns this
 */
proto.veidemann.api.eventhandler.v1.EventObject.prototype.setSource = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional State state = 4;
 * @return {!proto.veidemann.api.eventhandler.v1.EventObject.State}
 */
proto.veidemann.api.eventhandler.v1.EventObject.prototype.getState = function() {
  return /** @type {!proto.veidemann.api.eventhandler.v1.EventObject.State} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.veidemann.api.eventhandler.v1.EventObject.State} value
 * @return {!proto.veidemann.api.eventhandler.v1.EventObject} returns this
 */
proto.veidemann.api.eventhandler.v1.EventObject.prototype.setState = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional string assignee = 5;
 * @return {string}
 */
proto.veidemann.api.eventhandler.v1.EventObject.prototype.getAssignee = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.veidemann.api.eventhandler.v1.EventObject} returns this
 */
proto.veidemann.api.eventhandler.v1.EventObject.prototype.setAssignee = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * repeated Data data = 6;
 * @return {!Array<!proto.veidemann.api.eventhandler.v1.Data>}
 */
proto.veidemann.api.eventhandler.v1.EventObject.prototype.getDataList = function() {
  return /** @type{!Array<!proto.veidemann.api.eventhandler.v1.Data>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.veidemann.api.eventhandler.v1.Data, 6));
};


/**
 * @param {!Array<!proto.veidemann.api.eventhandler.v1.Data>} value
 * @return {!proto.veidemann.api.eventhandler.v1.EventObject} returns this
*/
proto.veidemann.api.eventhandler.v1.EventObject.prototype.setDataList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 6, value);
};


/**
 * @param {!proto.veidemann.api.eventhandler.v1.Data=} opt_value
 * @param {number=} opt_index
 * @return {!proto.veidemann.api.eventhandler.v1.Data}
 */
proto.veidemann.api.eventhandler.v1.EventObject.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 6, opt_value, proto.veidemann.api.eventhandler.v1.Data, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.veidemann.api.eventhandler.v1.EventObject} returns this
 */
proto.veidemann.api.eventhandler.v1.EventObject.prototype.clearDataList = function() {
  return this.setDataList([]);
};


/**
 * optional Severity severity = 7;
 * @return {!proto.veidemann.api.eventhandler.v1.EventObject.Severity}
 */
proto.veidemann.api.eventhandler.v1.EventObject.prototype.getSeverity = function() {
  return /** @type {!proto.veidemann.api.eventhandler.v1.EventObject.Severity} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {!proto.veidemann.api.eventhandler.v1.EventObject.Severity} value
 * @return {!proto.veidemann.api.eventhandler.v1.EventObject} returns this
 */
proto.veidemann.api.eventhandler.v1.EventObject.prototype.setSeverity = function(value) {
  return jspb.Message.setProto3EnumField(this, 7, value);
};


/**
 * repeated string label = 8;
 * @return {!Array<string>}
 */
proto.veidemann.api.eventhandler.v1.EventObject.prototype.getLabelList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 8));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.veidemann.api.eventhandler.v1.EventObject} returns this
 */
proto.veidemann.api.eventhandler.v1.EventObject.prototype.setLabelList = function(value) {
  return jspb.Message.setField(this, 8, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.veidemann.api.eventhandler.v1.EventObject} returns this
 */
proto.veidemann.api.eventhandler.v1.EventObject.prototype.addLabel = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 8, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.veidemann.api.eventhandler.v1.EventObject} returns this
 */
proto.veidemann.api.eventhandler.v1.EventObject.prototype.clearLabelList = function() {
  return this.setLabelList([]);
};


/**
 * repeated Activity activity = 9;
 * @return {!Array<!proto.veidemann.api.eventhandler.v1.Activity>}
 */
proto.veidemann.api.eventhandler.v1.EventObject.prototype.getActivityList = function() {
  return /** @type{!Array<!proto.veidemann.api.eventhandler.v1.Activity>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.veidemann.api.eventhandler.v1.Activity, 9));
};


/**
 * @param {!Array<!proto.veidemann.api.eventhandler.v1.Activity>} value
 * @return {!proto.veidemann.api.eventhandler.v1.EventObject} returns this
*/
proto.veidemann.api.eventhandler.v1.EventObject.prototype.setActivityList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 9, value);
};


/**
 * @param {!proto.veidemann.api.eventhandler.v1.Activity=} opt_value
 * @param {number=} opt_index
 * @return {!proto.veidemann.api.eventhandler.v1.Activity}
 */
proto.veidemann.api.eventhandler.v1.EventObject.prototype.addActivity = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 9, opt_value, proto.veidemann.api.eventhandler.v1.Activity, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.veidemann.api.eventhandler.v1.EventObject} returns this
 */
proto.veidemann.api.eventhandler.v1.EventObject.prototype.clearActivityList = function() {
  return this.setActivityList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.eventhandler.v1.EventRef.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.eventhandler.v1.EventRef.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.eventhandler.v1.EventRef} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.eventhandler.v1.EventRef.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.eventhandler.v1.EventRef}
 */
proto.veidemann.api.eventhandler.v1.EventRef.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.eventhandler.v1.EventRef;
  return proto.veidemann.api.eventhandler.v1.EventRef.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.eventhandler.v1.EventRef} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.eventhandler.v1.EventRef}
 */
proto.veidemann.api.eventhandler.v1.EventRef.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.eventhandler.v1.EventRef.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.eventhandler.v1.EventRef.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.eventhandler.v1.EventRef} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.eventhandler.v1.EventRef.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string id = 1;
 * @return {string}
 */
proto.veidemann.api.eventhandler.v1.EventRef.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.veidemann.api.eventhandler.v1.EventRef} returns this
 */
proto.veidemann.api.eventhandler.v1.EventRef.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.veidemann.api.eventhandler.v1.Activity.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.eventhandler.v1.Activity.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.eventhandler.v1.Activity.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.eventhandler.v1.Activity} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.eventhandler.v1.Activity.toObject = function(includeInstance, msg) {
  var f, obj = {
    modifiedBy: jspb.Message.getFieldWithDefault(msg, 1, ""),
    modifiedTime: (f = msg.getModifiedTime()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    descriptionList: jspb.Message.toObjectList(msg.getDescriptionList(),
    proto.veidemann.api.eventhandler.v1.Activity.Change.toObject, includeInstance),
    comment: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.eventhandler.v1.Activity}
 */
proto.veidemann.api.eventhandler.v1.Activity.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.eventhandler.v1.Activity;
  return proto.veidemann.api.eventhandler.v1.Activity.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.eventhandler.v1.Activity} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.eventhandler.v1.Activity}
 */
proto.veidemann.api.eventhandler.v1.Activity.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setModifiedBy(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setModifiedTime(value);
      break;
    case 3:
      var value = new proto.veidemann.api.eventhandler.v1.Activity.Change;
      reader.readMessage(value,proto.veidemann.api.eventhandler.v1.Activity.Change.deserializeBinaryFromReader);
      msg.addDescription(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setComment(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.eventhandler.v1.Activity.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.eventhandler.v1.Activity.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.eventhandler.v1.Activity} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.eventhandler.v1.Activity.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getModifiedBy();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getModifiedTime();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDescriptionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.veidemann.api.eventhandler.v1.Activity.Change.serializeBinaryToWriter
    );
  }
  f = message.getComment();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.veidemann.api.eventhandler.v1.Activity.ChangeType = {
  CREATED: 0,
  VALUE_CHANGED: 1,
  ARRAY_ADD: 2,
  ARRAY_DEL: 3
};




if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.eventhandler.v1.Activity.Change.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.eventhandler.v1.Activity.Change.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.eventhandler.v1.Activity.Change} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.eventhandler.v1.Activity.Change.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getFieldWithDefault(msg, 1, 0),
    field: jspb.Message.getFieldWithDefault(msg, 2, ""),
    oldVal: jspb.Message.getFieldWithDefault(msg, 3, ""),
    newVal: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.eventhandler.v1.Activity.Change}
 */
proto.veidemann.api.eventhandler.v1.Activity.Change.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.eventhandler.v1.Activity.Change;
  return proto.veidemann.api.eventhandler.v1.Activity.Change.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.eventhandler.v1.Activity.Change} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.eventhandler.v1.Activity.Change}
 */
proto.veidemann.api.eventhandler.v1.Activity.Change.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.veidemann.api.eventhandler.v1.Activity.ChangeType} */ (reader.readEnum());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setField(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOldVal(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setNewVal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.eventhandler.v1.Activity.Change.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.eventhandler.v1.Activity.Change.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.eventhandler.v1.Activity.Change} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.eventhandler.v1.Activity.Change.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getType();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getField();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOldVal();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getNewVal();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional ChangeType type = 1;
 * @return {!proto.veidemann.api.eventhandler.v1.Activity.ChangeType}
 */
proto.veidemann.api.eventhandler.v1.Activity.Change.prototype.getType = function() {
  return /** @type {!proto.veidemann.api.eventhandler.v1.Activity.ChangeType} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.veidemann.api.eventhandler.v1.Activity.ChangeType} value
 * @return {!proto.veidemann.api.eventhandler.v1.Activity.Change} returns this
 */
proto.veidemann.api.eventhandler.v1.Activity.Change.prototype.setType = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional string field = 2;
 * @return {string}
 */
proto.veidemann.api.eventhandler.v1.Activity.Change.prototype.getField = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.veidemann.api.eventhandler.v1.Activity.Change} returns this
 */
proto.veidemann.api.eventhandler.v1.Activity.Change.prototype.setField = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string old_val = 3;
 * @return {string}
 */
proto.veidemann.api.eventhandler.v1.Activity.Change.prototype.getOldVal = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.veidemann.api.eventhandler.v1.Activity.Change} returns this
 */
proto.veidemann.api.eventhandler.v1.Activity.Change.prototype.setOldVal = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string new_val = 4;
 * @return {string}
 */
proto.veidemann.api.eventhandler.v1.Activity.Change.prototype.getNewVal = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.veidemann.api.eventhandler.v1.Activity.Change} returns this
 */
proto.veidemann.api.eventhandler.v1.Activity.Change.prototype.setNewVal = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string modified_by = 1;
 * @return {string}
 */
proto.veidemann.api.eventhandler.v1.Activity.prototype.getModifiedBy = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.veidemann.api.eventhandler.v1.Activity} returns this
 */
proto.veidemann.api.eventhandler.v1.Activity.prototype.setModifiedBy = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp modified_time = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.veidemann.api.eventhandler.v1.Activity.prototype.getModifiedTime = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.veidemann.api.eventhandler.v1.Activity} returns this
*/
proto.veidemann.api.eventhandler.v1.Activity.prototype.setModifiedTime = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.veidemann.api.eventhandler.v1.Activity} returns this
 */
proto.veidemann.api.eventhandler.v1.Activity.prototype.clearModifiedTime = function() {
  return this.setModifiedTime(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.veidemann.api.eventhandler.v1.Activity.prototype.hasModifiedTime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated Change description = 3;
 * @return {!Array<!proto.veidemann.api.eventhandler.v1.Activity.Change>}
 */
proto.veidemann.api.eventhandler.v1.Activity.prototype.getDescriptionList = function() {
  return /** @type{!Array<!proto.veidemann.api.eventhandler.v1.Activity.Change>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.veidemann.api.eventhandler.v1.Activity.Change, 3));
};


/**
 * @param {!Array<!proto.veidemann.api.eventhandler.v1.Activity.Change>} value
 * @return {!proto.veidemann.api.eventhandler.v1.Activity} returns this
*/
proto.veidemann.api.eventhandler.v1.Activity.prototype.setDescriptionList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.veidemann.api.eventhandler.v1.Activity.Change=} opt_value
 * @param {number=} opt_index
 * @return {!proto.veidemann.api.eventhandler.v1.Activity.Change}
 */
proto.veidemann.api.eventhandler.v1.Activity.prototype.addDescription = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.veidemann.api.eventhandler.v1.Activity.Change, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.veidemann.api.eventhandler.v1.Activity} returns this
 */
proto.veidemann.api.eventhandler.v1.Activity.prototype.clearDescriptionList = function() {
  return this.setDescriptionList([]);
};


/**
 * optional string comment = 4;
 * @return {string}
 */
proto.veidemann.api.eventhandler.v1.Activity.prototype.getComment = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.veidemann.api.eventhandler.v1.Activity} returns this
 */
proto.veidemann.api.eventhandler.v1.Activity.prototype.setComment = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.veidemann.api.eventhandler.v1.Data.prototype.toObject = function(opt_includeInstance) {
  return proto.veidemann.api.eventhandler.v1.Data.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.veidemann.api.eventhandler.v1.Data} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.eventhandler.v1.Data.toObject = function(includeInstance, msg) {
  var f, obj = {
    key: jspb.Message.getFieldWithDefault(msg, 1, ""),
    value: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.veidemann.api.eventhandler.v1.Data}
 */
proto.veidemann.api.eventhandler.v1.Data.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.veidemann.api.eventhandler.v1.Data;
  return proto.veidemann.api.eventhandler.v1.Data.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.veidemann.api.eventhandler.v1.Data} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.veidemann.api.eventhandler.v1.Data}
 */
proto.veidemann.api.eventhandler.v1.Data.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setKey(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setValue(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.veidemann.api.eventhandler.v1.Data.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.veidemann.api.eventhandler.v1.Data.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.veidemann.api.eventhandler.v1.Data} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.veidemann.api.eventhandler.v1.Data.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getKey();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getValue();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional string key = 1;
 * @return {string}
 */
proto.veidemann.api.eventhandler.v1.Data.prototype.getKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.veidemann.api.eventhandler.v1.Data} returns this
 */
proto.veidemann.api.eventhandler.v1.Data.prototype.setKey = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string value = 2;
 * @return {string}
 */
proto.veidemann.api.eventhandler.v1.Data.prototype.getValue = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.veidemann.api.eventhandler.v1.Data} returns this
 */
proto.veidemann.api.eventhandler.v1.Data.prototype.setValue = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


goog.object.extend(exports, proto.veidemann.api.eventhandler.v1);
