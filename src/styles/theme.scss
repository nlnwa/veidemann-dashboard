@use '@angular/material' as mat;

$my-app-typography: mat.define-typography-config(
  $font-family: 'Lato, Helvetica, Arial, sans-serif'
);

@include mat.all-component-typographies($my-app-typography);
@include mat.core();

$my-app-primary: mat.define-palette(mat.$blue-gray-palette);
$my-app-accent: mat.define-palette(mat.$orange-palette);
$my-app-warn: mat.define-palette(mat.$red-palette);
$dark-focused: rgba(black, 0.12);
$ad-app-primary: mat.define-palette(mat.$blue-gray-palette, 800);

/* LIGHT THEME */

$light-theme: mat.define-light-theme((
  color: (
    primary: $my-app-primary,
    accent: $my-app-accent,
    warn: $my-app-warn
  ),
  typography: mat.define-typography-config(),
  density: 0,
));

// $highlight: mat.get-color-from-palette(map-get($my-app-theme, background), 'hover');
$highlight: mat.get-color-from-palette(map-get($light-theme, background), 'hover');

/* DARK THEME */

$dark-theme: mat.define-dark-theme((
  color: (
    primary: $ad-app-primary,
    accent: $my-app-accent,
    warn: $my-app-warn
  ),
));

//$primary: mat.get-color-from-palette($my-app-primary);
//$accent: mat.get-color-from-palette($my-app-accent);
//$warn: mat.get-color-from-palette($my-app-warn);


//@media (prefers-color-scheme: light) {
//  @include mat.all-component-themes($my-app-theme);
//}
//
//@media (prefers-color-scheme: dark) {
//  @include mat.all-component-colors($angular-dark-theme);
//}

// Apply the light theme by default
@include mat.core-theme($light-theme);
@include mat.button-theme($light-theme);

// Apply the light theme only when the user prefers light themes.
@media (prefers-color-scheme: dark) {
  // Use the `-color` mixins to only apply color styles without reapplying the same
  // typography and density styles.
  @include mat.core-color($dark-theme);
  @include mat.button-color($dark-theme);
}
